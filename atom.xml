<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>94geek.com - by Seapeak.Xu</title>
 <link href="http://www.94geek.com/atom.xml" rel="self"/>
 <link href="http://www.94geek.com"/>
 <updated>2014-11-01T21:52:19+08:00</updated>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>libev文档中文版--简介</title>
   <link href="http://www.94geek.com/2014/10/23/libev-doc-zh-cn.html"/>
   <updated>2014-10-23T00:00:00+08:00</updated>
   <id>/2014/10/23/libev-doc-zh-cn</id>
   <content type="html">&lt;p&gt;libev - a high performance full-featured event loop written in C&lt;br&gt;
libev-一个用c写成的全功能事件循环库（PS：event loop不知道怎么翻译好）。&lt;/p&gt;

&lt;p&gt;SYNOPSIS&lt;br&gt;
简介&lt;br&gt;
&lt;code&gt;
    #include &amp;lt;ev.h&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;EXAMPLE PROGRAM&lt;br&gt;
示例程序
&lt;code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;// a single header file is required
// 需要包含ev.h头文件
#include &amp;lt;ev.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt; // for puts
// every watcher type has its own typedef&amp;#39;d struct
// with the name ev_TYPE
// 每一个观察者（watcher，以下还是用watcher吧，这种名称用中文很别扭）都有一个自己的结构体，
// 结构体名称形如ev_TYPE

ev_io stdin_watcher;
ev_timer timeout_watcher;

// all watcher callbacks have a similar signature
// this callback is called when data is readable on stdin
//所有的watcher回调函数也都有同样的函数签名
//当stdin可读的时候，执行回调函数
static void stdin_cb (EV_P_ ev_io *w, int revents) {
    puts (&amp;quot;stdin ready&amp;quot;);
    //for one-shot events, one must manually stop the watcher
    // with its corresponding stop function.
    // 对于一次性事件来说，我们必须使用watcher的相应停止函数来手动停止这个watcher
    //译者注：它的意思是对于一次性的事件，我们必须使用不同类型相应的函数来停止这个watcher在loop中继续被监视（比如，对于IO事件就是ev_io_stop,对于time事件  就是ev_time_stop）
    ev_io_stop (EV_A_ w);

    // this causes all nested ev_run&amp;#39;s to stop iterating
    //停止对于EV_A（loop）的所有迭代（其实就是停止loop的运行，释放全部的watcher）
    ev_break (EV_A_ EVBREAK_ALL);
}

// another callback, this time for a time-out
//另外一个回调函数，是事件过期调用的
static void timeout_cb (EV_P_ ev_timer *w, int revents) {
    puts (&amp;quot;timeout&amp;quot;);
    // this causes the innermost ev_run to stop iterating
    //停止当前loop循环
    ev_break (EV_A_ EVBREAK_ONE);
}

int main (void) {
    // use the default event loop unless you have special needs
    //使用默认的event loop除非你有特别的需求
     struct ev_loop *loop = EV_DEFAULT;

     // initialise an io watcher, then start it
     // this one will watch for stdin to become readable
    //初始化一个io watcher，将事件和loop关联
    //这个watcher监视stdin是否可读
     ev_io_init (&amp;amp;stdin_watcher, stdin_cb, /*STDIN_FILENO*/ 0, EV_READ);
     ev_io_start (loop, &amp;amp;stdin_watcher);

     // initialise a timer watcher, then start it
     // simple non-repeating 5.5 second timeout
    //初始化一个超时watcher，并将事件和loop关联
    //简单的非重复5.5s超时
     ev_timer_init (&amp;amp;timeout_watcher, timeout_cb, 5.5, 0.);
     ev_timer_start (loop, &amp;amp;timeout_watcher);

     // now wait for events to arrive
    //开始监听事件
     ev_run (loop, 0);

     // break was called, so exit
    return 0;
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/code&gt;
ABOUT THIS DOCUMENT&lt;br&gt;
关于这个文档  &lt;/p&gt;

&lt;p&gt;This document documents the libev software package.&lt;br&gt;
这份文档记录了libev这个软件开发包。&lt;/p&gt;

&lt;p&gt;The newest version of this document is also available as an html-formatted web page you might find easier to navigate when reading it for the first time: http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod.&lt;br&gt;
这个文档最新的版本是一个html，你可以在这里找到它：http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod.&lt;/p&gt;

&lt;p&gt;While this document tries to be as complete as possible in documenting libev, its usage and the rationale behind its design, it is not a tutorial on event-based programming, nor will it introduce event-based programming with libev.&lt;br&gt;
尽管这篇文档试着尽可能详细的说明libev，他的使用方法和背后的设计理念，这不是一个基于事件编程的教程，也不会使用libev来引入事件编程（这句话怎么怪怪的？有更好的翻译嘛？）  &lt;/p&gt;

&lt;p&gt;Familiarity with event based programming techniques in general is assumed throughout this document.&lt;br&gt;
这篇文档都假定你熟悉基于事件的编程技术  &lt;/p&gt;

&lt;p&gt;WHAT TO READ WHEN IN A HURRY  &lt;/p&gt;

&lt;p&gt;This manual tries to be very detailed, but unfortunately, this also makes it very long. If you just want to know the basics of libev, I suggest reading ANATOMY OF A WATCHER, then the EXAMPLE PROGRAM above and look up the missing functions in GLOBAL FUNCTIONS and the ev&lt;em&gt;io and ev&lt;/em&gt;timer sections in WATCHER TYPES.&lt;br&gt;
这个手册试着说明的非常详细，但不幸的是，这也将让它变的很长。如果你只是想了解
libev的基础知识，我建议读ANATOMY OF A WATCHER章节。示例程序在它上面，缺少的函
数在GLOBAL FUNCTIONS章节中找，ev_io和ev_timer部分在WATCHER TYPES章节  &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>关于内存池的设计思路和实现方法</title>
   <link href="http://www.94geek.com/2014/10/13/mempool.html"/>
   <updated>2014-10-13T00:00:00+08:00</updated>
   <id>/2014/10/13/mempool</id>
   <content type="html">&lt;h4&gt;摘要&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/mempool/1.jpg&quot; alt=&quot;car&quot;&gt;
&lt;br/&gt;
以前我也写过mempool，但是因为觉得麻烦，而且对于dfs这种系统，说实话，感觉
mempool没有http服务器对于mempool的需求那么大，所以也就没有把mempool放在心上，
直到前几天在debug程序，检查code的时候突然发现有几个函数中竟然没有把alloc的内存
给free了，当时汗就下来了......，遂想到很久之前写过的那个mempool，赶紧拿出来，
然后开启封条，重新组装，发挥作用。  &lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h4&gt;结构&lt;/h4&gt;

&lt;p&gt;memory pool的结构非常简单，组成这个pool的最重要的就是两个memory buffer和
large list。&lt;br&gt;
memory buffer在代码中是struct spx&lt;em&gt;mbuff的结构体，在pool中是一个单向list，
它主要提供的功能
就是分配小对象，mbuff可以自由的增大，不会受限制（但是受系统内存的限制）；&lt;br&gt;
large list其实就是大对象的列表，它是struct spx&lt;/em&gt;large的结构体，在pool中是一个双
向的list，它主要维护了大对象在pool中的存在方式。&lt;br&gt;
不管对于pooling object还是large object，我们都需要提供一单一的，一致的，简单的
object模型。通过这个模型，可以方便的得出这个对象是否是pooling的，它的size等等
信息，相当于让object有一个自解释的功能。所以，我们定义了struct spx_object这个
结构体来完成这个功能。但是仅仅通过这个结构体还不能够实现，其中还需要一些c中的
指针和内存映射小技巧来完成（其实就是模拟父类，子类，继承等概念）。&lt;br&gt;
&lt;br/&gt;&lt;/p&gt;

&lt;h4&gt;功能&lt;/h4&gt;

&lt;p&gt;其实内存池相对来说，还是比较简单的。毕竟你写的不是gc，所以没必要整的非常复杂，
从大的出发点来说它只要满足能分配对象，能清空（或者释放）对象就可以了。还有的一
些功能都是为了mempool更好用，额外加上去的。&lt;br&gt;
那么我们这个mempool有哪些功能呢？&lt;br&gt;
分配和释放对象肯定是有的啦，要不然怎么能成为
mempool呢？&lt;br&gt;
为了更好的使用mempool和pooling object，我们还需要一个memory algin功
能；&lt;br&gt;
当然机器的内存也不能一味的使用，当一次request结束后，mempool是可以被释放的
，那么为了效率的综合考虑，我们假如了一个keep memory buffer size功能，其实就是
每次clear的时候，最多保存多少内存是被memset的，多于的内存都会被free掉；&lt;br&gt;
还有一个当你分配的对象很大的时候，超过了一个阀值，那么就把这个object成为large
object，他会单独的被分配，不会占用memory buffer的容量,large object不会在clear
被留下来，他们会被全部free掉，因为reset之后，程序并不知道应该怎么使用large
object；&lt;br&gt;
&lt;br/&gt;&lt;/p&gt;

&lt;h4&gt;spx&lt;em&gt;object和spx&lt;/em&gt;large&lt;/h4&gt;

&lt;p&gt;在mempool中，spx object是所有的heap object的基础，它是构成整个mempool的最基本
的元素，在mempool中所有的对象都是spx object对象的子对象。spx object的定义是在
spx&lt;em&gt;types.h文件中完成的，其实构成这个定义的还有一个SpxObjectStruct的marco。
mempool通过SpxObjectStruct和指针运算来完成对于对象的解析和自解释工作。在large
的定义中，SpxObjectStruct的位置只能放置在large的buf之前，因为只有这样，才能在
free的时候，可以通过指针的运算来得到large对于spx object整个类型的表示，得到这
个spx object后，才能通过is&lt;/em&gt;pooling参数来得到该对象是large还是pooling，再采取相
应的free策略。&lt;br&gt;
在整个mempool中，其实有很多的运算和oo模拟都是通过指针运算来解决的。类似的解决
办法如mbuff。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>YDB的内核的模块化设计</title>
   <link href="http://www.94geek.com/2014/09/10/struct-with-ydb.html"/>
   <updated>2014-09-10T00:00:00+08:00</updated>
   <id>/2014/09/10/struct-with-ydb</id>
   <content type="html">&lt;h4&gt;摘要&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/module/1.jpg&quot; alt=&quot;car&quot;&gt;
    &lt;br /&gt;
ydb是一个公司使用的分布式文件系统，如果有需要，也可以拿来当k-v的storage来使用
。ydb主要应对的一个使用场景就是我们的章节存储，还有的一个可能就是图片的存储。
这些都是典型的k-v模型。&lt;br&gt;
那么，ydb就很明确了，首先它需要一个服务器端，用来存储k-v结构，然后把key返回给
client，再由client存储到db中；在需要的时候，通过key，就可以从ydb中得到key相应
的value，并且还能对value做相应的更改和删除等操作。&lt;br&gt;
既然是典型的C-S模型，那么对于Server来说，他需要解决几个问题：网络的交互、内部
job的状态dispatch，disk-io的操作。其中，网络的交互和disk-io都是典型的blacking
操作，需要我们另外想办法解决。  &lt;/p&gt;

&lt;!-- more --&gt;

&lt;h4&gt;设计&lt;/h4&gt;

&lt;p&gt;根据摘要的描述，我们容易的得到ydb的内部其实分成了几个部分：网络，dio，notify。
这3部分相互之间的协作构成了我们整个系统。鉴于这3个部分的共性：它们基本上都是
listen message，然后deal message，最后再把处理完的message dispatch到它的下游（
或者上游）。那么我们就能从这3部分的特性中提炼出来一个大家都拥有的概念，在ydb中
，我们把它称之为module。在ydb中，我们把module定义在spx中，spx_module就是模块的
定义。&lt;br&gt;
在每一个module中，我们使用到了多线程，即每一个module包含了n个线程，每个线程一
个libev的loop，这样，我们通过通过id或者任何你可以hash的key来确定该request应该
由module中的哪一个thread来处理。因为一个request只会被一个module的一个thread处
理，并且是通过loop来处理的，所以不会出现并发的现象，不需要mutex locker。&lt;br&gt;
deal function使用的也是callback的方式（PS：虽然callback的方式对于devper来说简
直就是灾难，但是在lib中你也不得不使用这种简单而高效的方式，就算我是callback编
程的反对者，但是也无济于事）。&lt;br&gt;
spx-module是一个base module，每个module都会拥有自己的功能，所以我们在spx中根据
ydb的需要，也根据通常的需要，我们定义了
notifier-module,network-module,task-module.它们分别用来处理网络连接的通知、网
络的读取和写入、任务的处理。在spx中定义的只是最基本的module操作，相对于ydb来说
，它还有自定义的notifier，network，task模块。因为ydb的特殊性，在ydb的task
module中，我们还使用thread的loop来处理对于dio的noblacking操作。  &lt;/p&gt;

&lt;h4&gt;结构说明&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/module/dim.png&quot; alt=&quot;car&quot;&gt;
&lt;br /&gt;
&lt;img src=&quot;/img/module/cs.png&quot; alt=&quot;car&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>关于使用libev设计YDB的网络主体结构</title>
   <link href="http://www.94geek.com/2014/09/07/struct-with-libev.html"/>
   <updated>2014-09-07T00:00:00+08:00</updated>
   <id>/2014/09/07/struct-with-libev</id>
   <content type="html">&lt;h4&gt;摘要&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/sol/1.png&quot; alt=&quot;car&quot;&gt;
&lt;/br&gt;
在前两年中，我在5173写了一个分布式文件系统（以下简称DFS），后来在写完以后因为
某些原因，最后并没有在线上实施（目前5173 online环境上的DFS还是09年的时候部署的
DIY版本的FASTDFS）。后来离开5173后，来到了腾讯文学，再一次需要DFS，所以重新动
工开始写DFS，到目前为止，我一个人写了3个月了，基本的功能差不多了，数据备份和恢
复功能已经完成了1/4，还有一半的完整性同步和整个的单盘恢复还没完成。从5173到腾
讯文学，第二次写DFS，重新设计了DFS的内核框架，纠正了以前犯的一些错误。&lt;br&gt;
相对于DFS来说，主要的问题有2个，一个是对于磁盘的IO，另外一个是对于网络的IO。这
里我们只要讨论对于网络的IO。  &lt;/p&gt;

&lt;!-- more --&gt;

&lt;h4&gt;5173的DFS内核结构&lt;/h4&gt;

&lt;p&gt;PS:因为我离开5173的时候没有携带任何的源代码，所以以下的代码基本上都是伪代码。&lt;br&gt;
以前的DFS的网络通讯是基于libevent的，现在的基于libev的，libev是libevent的高性
能版本，原本想自己写一个，但是看过了libev的源码后（虽然看的时候有点吐），还是
决定不折腾，使用libev就行了。所以因为libevent和libev的相关性，其基本的框架应该
都是一样的，但是恰恰就是在这个问题上我犯了错。&lt;br&gt;
原来的DFS中，nio的结构我是这样定义的&lt;br&gt;
&lt;pre&gt;&lt;code&gt;
    struct spx_job{
        event_loop *loop;
        int fd;
        watcher *watcher;
    };
&lt;/code&gt;&lt;/pre&gt;
然后按照每个线程一个loop的原则，初始化了spx&lt;em&gt;job&lt;/em&gt;pool，供每个network的线程使用
。但是这个结构其实是有问题的，问题就是出在把loop和watcher放在了一起。对于job来
说，它应该只关心watcher，而不用关心loop，而对于线程来说，它需要关心loop，而
watcher只是在loop中排队的一个项而已。但是就像上面这种写法，程序一样也能运行，
但是运行起来的效率就会大打折扣。原因就是在于对于线程多管理了watcher。如果你的
程序需要支撑10k的请求，那么按照上面的结构定义，就需要定义10k个线程，每个线程管
理一个loop和它对应的那个watcher。效率那是相当的低，并且10k的线程也不现实。这个
就是为什么原理的DFS并发上不去的原因。loop和watcher之间的引用变得紧密了，并没有
拆解开。  &lt;/p&gt;

&lt;h4&gt;解决方案&lt;/h4&gt;

&lt;p&gt;那么在现在的DFS中，我解决掉了这个问题，首先把这一整个结构体拆开，变成2个，一个
是job相关性的watcher，一个是线程相关性的loop。&lt;br&gt;
&lt;pre&gt;&lt;code&gt;
    struct spx_job{
        watcher *w;
        int fd;
    };
&lt;/br&gt;
    struct spx_network_module{
        event_loop *loop;
    };
&lt;/code&gt;&lt;/pre&gt;
首先，我们让job主要去关心watcher，相对于watcher，它监听的是一个fd，所以那个fd
也必须时刻跟随着watcher，所以我们把它们两个放在一起；另外一个是nio-module，其
实它仅仅是一个线程池，主要就是负责网络的IO。那么它需要一个loop来管理所有注册到
该module下的watcher。这样，把线程和job分开，我们就可以保证module和watcher之间
的1：n关系了。也就是说，我们可以开n（n等于cpu的核数）个线程，组成一个network
module的线程池，然后我们可以再初始化10k个job，在程序运行的过程中，根据一定的负
载算法，把10k个的job分别注册到不同线程的loop上去。这样，就可以更大的发挥loop和
loop的功效。  &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>由劳伦斯想到的</title>
   <link href="http://www.94geek.com/2014/09/05/icloud.html"/>
   <updated>2014-09-05T00:00:00+08:00</updated>
   <id>/2014/09/05/icloud</id>
   <content type="html">&lt;h4&gt;是不是很熟悉&lt;/h4&gt;

&lt;div class=&quot;row&quot;&gt;
  &lt;div class=&quot;col-md-6&quot; &gt;&lt;img src=&quot;/img/icloud/2_215.jpg&quot; /&gt;&lt;/div&gt;
  &lt;div class=&quot;col-md-6&quot; &gt;&lt;img src=&quot;/img/icloud/1_215.jpg&quot; /&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;这几天这个很火，作为一个DFS的开发者，是不是应该普及一下所谓的&amp;quot;云&amp;quot;对于我们生活
的改变，同时在这个互联网时代，我们的一些隐私问题，特别是很多&amp;quot;默默无闻&amp;quot;的运行在
后台的软件功能对于我们隐私的一些挑战.  &lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;随着技术的发展，现在的手持设备，不管是手机还是PAD还是原来的相机，包括专业的那
种&amp;quot;大炮&amp;quot;，在价格上都是越来越便宜；在技术上，对于使用者的入门要求也是越来越低，在
销售上也是越来越容易买到。它们改变了我们生活的方方面面，有好的也有坏的。最近几
年发生的多次&amp;quot;艳照门事件&amp;quot;就是这些设备被不良人士或者自己不小心泄漏造成的。&lt;br&gt;
在几年前，3G/4G还没那么普遍的时候，国内发生了一次&amp;quot;艳照门&amp;quot;，从技术上说那次的主角
是”硬盘“，这一次好莱坞的主角是”智能手持设备“。那么我们从技术上怎么去了解这
个事情的原委，以后我们怎么去规避这些事情的发生呢？&lt;br&gt;
首先说说智能设备，拿相机来说，它相对来说还是比较安全的。只要你不要把相机借给别
人，一般还是能保证照片的私密性，但是如果一旦你把数码照片copy到电脑上，那就不一
定了。电脑的环境太复杂，很多的软件和病毒都在那里恭候着你的文件，在加上一些”云
类“软件的自动化，他们在后台做的那些事情你真的能全部知道？&lt;br&gt;
再来说说我们几乎每个人都使用的智能手机，相比数码相机，手
机的风险就会大很多，首先它是一个终端，可以上网，可以安装软件，可以拍摄。这样就
已经把你自己组成了一个闭环。&amp;quot;生产者-运输者-消费者&amp;quot;，分别对应&amp;quot;手机拍照-手机联网-发
送到云端&amp;quot;。（PS，这里牵涉到一个&amp;quot;云&amp;quot;端，下回也会具体讲这个问题）。再加上手机本身可
以安装软件，那么这些软件可能会翻阅你的数据，再后台&amp;quot;默默&amp;quot;的就把你的数据上传到云端
去了。就像这次的好莱坞事件，我相信其实很多的ip使用者都不知道其实ip会&amp;quot;默默&amp;quot;（偷偷
）的把你的数据上传到icloud上去。这是一个系统设置，可以关掉，但是默认，这个设置
是开着的，所以你如果不把这个设置关掉，你认为的一些私人信息其实并不私密。&lt;br&gt;
然后再说说软件，其实上面已经说了一些关于ip的，其实这个也是软件，只是它是ip自带
的，隐藏在系统之内，所以你一般都不会去关心它，甚至更不知道它的存在。那么还有一
种软件是你自己去安装的，比如百度云，360云等这些软件。你在安装这些软件的时候其
实是为了比如看一个你保存在上面的视频，电影等。但是这些软件安装完以后几乎都会默
认的打开上传数据的功能，并且会跳出来一个选择框，让你选择是不是可以拥有root权限
，几乎很少有人点不给的。当这些软件拿到了root权限后，那就等于拿到你系统的全部密
码，所有的数据它都可以自由的获取并且上传，只要这些软件它愿意。&lt;br&gt;
最后说说云吧。我就是做云相关的。其实云和几年前的ajax一样，并不是什么新的技术，
也不是什么高大上的技术，更不是什么灵丹妙药，但是现在市面上，不管你是做一个策划
还是写一个报告，只要是技术相关的，只要你扯上几个云字，就会被人家觉得这有点不太
符合潮流，也不显得高大上，更觉得这没什么意思。其实云仅仅只是一个大型的分布式系
统而已，几年前甚至十几年前就有公司这么干了，只是那个时候的名字更长更显得专业一
些，并不想现在人人都说云一样。其实现在说云的有几个是以前知道或者自己亲身干过的
呢？都是在操作概念。&lt;br&gt;
普及了云的来历，那么我们来说说它在整个系统中的唯一。可以说只要智能设备把数据上
传到云，你几乎已经不可能把这些数据删除干净了。&lt;br&gt;
1. 从技术上说几乎所有的云设备都不支持修改，只支持insert和delete。而且这个delete几乎都是
软删除，也就是逻辑删除，直白一点就是置位。浅显来说，它仅仅只是你的软件认为它已
经被删除了而已，但是实际上它还是在磁盘上，只要使用另外一个软件（比如内部管理软
件）就可以把你认为已经删除的数据再次读取出来；&lt;br&gt;
2. 所有的云设备都有备份，虽然几乎所有的备份都会追求最后一致性，但是也不免有的
机器会出现故障，并且在云中，单盘出现故障几乎是一个常态的事情。这些存储数据的磁
盘一般都会被返厂维修，并且在维修时不保证数据的完整性，几乎通常拿回来时都是被改
动过的，所以，这也是一道很大风险；&lt;br&gt;
3. 无良的黑客会使用各种技巧去破解云，因为云相对来说是对公众开放的，公众的保密
意识也不强，比如云的密码就是简单的123456，那你说不管多强的系统，使用那么简单的
密码谁也救不了你啊？  &lt;/p&gt;

&lt;h4&gt;规避问题&lt;/h4&gt;

&lt;p&gt;那么怎么规避这个问题呢？&lt;br&gt;
1. 不要去拍这些私人照片，如果实在要拍必须选择不能上网的设备；&lt;br&gt;
2. 尽量不要保存这些照片，如果必须保存，有条件的使用家庭的NAS之类的，条件不好的
，买个移动硬盘现在也没多少钱，1TB的400+，只要你不是哪方面的脑残粉，基本上够你
这辈子的照片了；&lt;br&gt;
3. 如果实在经济有问题，但是又有想法，那么首先选择压缩文件，并且压缩文件要增加
密码，并且分个打包，然后把一些申请的公共云的账号和密码必须要足够复杂，最好是每
隔一段时间更换一次密码；&lt;br&gt;
4. 增加自己的私密性，保证自己的手机，相机等设备要在自己的控制范围之类；&lt;br&gt;
5. 拿到只能设备首先要看一下关于网络方面的问题，比如那些软件会上传文件（特别是
后台上传）等，如果发现就关掉它；&lt;br&gt;
6. 最后，还是那句话：最好不要去拍。没有创建就没有泄露，没有爱好就没有后悔。  &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>使用bit解决跳位问题</title>
   <link href="http://www.94geek.com/2014/09/04/bit-alg.html"/>
   <updated>2014-09-04T00:00:00+08:00</updated>
   <id>/2014/09/04/bit-alg</id>
   <content type="html">&lt;h4&gt;背景&lt;/h4&gt;

&lt;p&gt;近期一直在做DFS的开发工作，在开发工作中碰到一个&amp;quot;跳目录&amp;quot;的问题。具体是这样的，
首先我们的DFS（名字叫ydb，一下就称ydb吧。）也就是ydb会对每个配置的挂载点进行格
式化。这个格式化其实就是建立文件夹。文件夹的数量(一下简称storerooms）是可配置的，比如你可以配置成64
也可以配置成128或者任何一个你想要的数，但是最大不能超过256(其实是255，0-FF）.那么ydb就会对每个挂
载点进行一次storeromes*storerooms的文件夹建立，最后文件夹的呈现这样一个情况：&lt;br&gt;
&lt;img src=&quot;/img/bit/dirs.png&quot; alt=&quot;dirs-style&quot;&gt;&lt;br&gt;
在ydb中，每个文件夹保存的文件数也是可以配置的（配置项为storecount），只要文件
夹内的文件存储量达到storecount，那么下一个文件将会存入下一个文件夹，比如当前存
储在00/03文件夹，那么下一次就会存储到00/04，如果storerooms为256，那么如果当前
文件夹为00/FF，那么下一次将会01/00（其实就是会跳母文件夹）。&lt;br&gt;
其实就是这个跳文件夹的功能，怎么样才能解决问题？  &lt;/p&gt;

&lt;!-- more --&gt;

&lt;h4&gt;解决方案&lt;/h4&gt;

&lt;p&gt;为了方便里面，我们把前面的p1设成母文件夹，p2设成子文件夹，就是这样p1/p2。  &lt;/p&gt;

&lt;h5&gt;人类的代码&lt;/h5&gt;

&lt;p&gt;人类能理解的代码呢，基本上就是按部就班的解决这个问题，思路是这样的：&lt;br&gt;
1. 判断p2+1 是不是等于storerooms，如果没有，那就+1；&lt;br&gt;
2. 如果等于storerooms，那么p2归零，p1+1；&lt;br&gt;
3. 判断p1+1后是不是等于storerooms，如果不是，那么正常执行，如果是，那么p1，p2.&lt;br&gt;
全部归零，从头开始；或者根据mp的负载均衡配置，决定存储的mp。&lt;br&gt;
代码大概就是这样的；  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;storerooms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;storerooms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;//insert get mp by storemode&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这样勉强还算能看的下去，是吧？但是总归让人感觉不是很舒服，层级太多，判断太多了
，那么我们来一种计算机喜欢的方式。  &lt;/p&gt;

&lt;h5&gt;计算机喜欢的代码&lt;/h5&gt;

&lt;p&gt;这里我们使用了一个技巧，就是char和int之间的关系。&lt;br&gt;
&lt;img src=&quot;/img/bit/int.jpg&quot; alt=&quot;int&quot;&gt;&lt;br&gt;
如上图，一个int在内存中是4个byte，一个byte的最大值正好是255.完全符合我们的
storerooms的最大值。那么也就是说p1,p2是一个int的2个byte(分别为
        p2-&amp;gt;byte0,p1-&amp;gt;byte1,flag-&amp;gt;byte2)，而且如果我们的最大值
正好设定为255，那么我们连跳级都不用了，直接就已经内置了（因为p2达到255，再加1
，正好向p1加1，p2归0）。所以我们就有如下的算法：  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;u32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;u8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;storerooms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;storerooms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;解释一下：&lt;br&gt;
1. 首先，我们需要一个u32的临时变量，所有的数据都是在它内部变的；&lt;br&gt;
2. flag就是是不是需要重新获取mp或者说该mp下所有的目录都放满的标志；&lt;br&gt;
3. 把p1和p2根据位置压入u32的临时变量，然后直接对这个变量+1；&lt;br&gt;
4. 再把u32的变量分解成flag，p1和p2；&lt;br&gt;
5. 然后判断母子目录要不要跳；&lt;br&gt;
6. 最后根据flag，决定是否需要重新确定存储mp。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>redis vs rabbitmq队列功能介绍和测试</title>
   <link href="http://www.94geek.com/2014/08/31/redis-and-rabbitmq.html"/>
   <updated>2014-08-31T00:00:00+08:00</updated>
   <id>/2014/08/31/redis-and-rabbitmq</id>
   <content type="html">&lt;h4&gt;摘要&lt;/h4&gt;

&lt;p&gt;近日，一py找到我，让我帮忙做一些redis和rabbitmq的功能和性能测试。他们在做项目
的时候要使用到消息队列，以完成25000个节点的数据推送并发，并且需要在接到数据后
，一部分数据在短时间内（最多可能是3s内）必须处理完毕，并且产生后续动作。所以这
一块对于性能的要求相当的高。目前来看，实际情况是我那py那里人手不够，所以在选型
的时候首先要满足尽量少的工作量，换而言之，就是他们最好找一个大而全，并且还能保
证效率的message queue。市面上mq的玩意不少，但是貌似能大规模使用的，并且达到一
定效率的倒是并不多。所以我推荐了2款：redis和rabbitmq。总体上，这两款也算是使用
较多的典型代表了。&lt;br&gt;
redis，效率强大，mq的功能并不是太完善。并且很多的功能（比如ack）等都需要自己写
代码来使用&amp;quot;贴膏药&amp;quot;的方式弥补；&lt;br&gt;
rabbitmq，工业级标准的代表，但是一提到工业级基本上就是代表了坑爹。性能肯定是无
法和redis相比，但是强大在功能完善，连RPC都自带了。汗颜......。所以基本上这款是
我py最上心的（PS：人少活多，当然选型的时候选功能多的，自己可以少干很多活。）。&lt;br&gt;
&lt;b&gt;注意：本文只对redis和rabbitmq作为队列进行比较。&lt;/b&gt;&lt;br&gt;
&lt;img src=&quot;/img/redis-vs-rabbitmq/total.jpg&quot; alt=&quot;redis-vs-rabbitmq&quot;&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h4&gt;redis功能介绍&lt;/h4&gt;

&lt;h5&gt;特性&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;有现成的message功能；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;性能强劲，eventloop，单进程，几乎能吃掉整个cpu（多核好像不在此列）；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;有简单的分布式(可以使用M/S模式)，或者自己做集群；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;支持IO，但是一般都是slave做；&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h5&gt;缺点&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;对使用人员，不管是运维还是开发者要求都比较高;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;对于功能完备的msg功能，比如ack，得另外想办法解决；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;线程的msg会因为没有客户端监听丢失消息（不知道是不是我的环境问题造成的）；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;自己完成M/S角色的转换，避免内存全部被清空；&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;rabbitmq功能介绍&lt;/h4&gt;

&lt;h5&gt;特性&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;AMQP的工业标准，这个就不用多说了吧，代表了的东西太多，自己领会吧；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;支持分布式，客户端比较多，还有官方的mgr插件；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;通过erlang，可以支持分布式；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;对于使用者的要求没有redis高，简单很多；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;支持IO，和redis一样，一般也是slave做；&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h5&gt;缺点&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;功能多，交的复杂税就多，所以庞大复杂；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;性能不咋地，相比redis，差的不是一个数量级；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;名词多，整个rabbitmq的过程有9个名词，理解起来还是挺费力；&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;message queue测试&lt;/h4&gt;

&lt;h5&gt;情况和介绍&lt;/h5&gt;

&lt;ol&gt;
&lt;li&gt;使用单机，sender后入recver都是一台机器（没机器，我是一台mac，mac上的虚拟机
都是要钱的，穷，买不起，又不想用D版）；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;不做多线程，只做单进程单线程，因为多线程的sender对于rabbitmq不公平；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;send和recv不是同时的，都是一起send，一起recv，这样能最大限度的避免cpu的
切换；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;我的是mac，cpu是1.3g的i5，内存8g，没开io，所以磁盘无所谓；&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h5&gt;测试代码&lt;/h5&gt;

&lt;p&gt;我只贴出来一部分代码，一些简单的代码就不贴出来了。&lt;br&gt;
redis send with ack like topic
&lt;pre&gt;&lt;code&gt;
        public static void SubscribePattern(String msg) {
        Jedis jedis = null;
        try {
            jedis = new Jedis(&amp;quot;127.0.0.1&amp;quot;, 6379);
            RedisMessageWithAck m1 = new RedisMessageWithAck(&amp;quot;list2message&lt;em&gt;1&amp;quot;,
                    msg);
            jedis.lpush(&amp;quot;list2message&lt;/em&gt;1&amp;quot;,JSONObject.fromObject(m1).toString());
            jedis.zadd(&amp;quot;set&lt;em&gt;list2message&lt;/em&gt;1&amp;quot;,getTimeStamp(),JSONObject.fromObject(m1).toString());
            RedisMessageWithAck m2 = new RedisMessageWithAck(&amp;quot;list2message&lt;em&gt;2&amp;quot;,
                    msg);
            jedis.lpush(&amp;quot;list2message&lt;/em&gt;2&amp;quot;,JSONObject.fromObject(m2).toString());
            jedis.zadd(&amp;quot;set&lt;em&gt;list2message&lt;/em&gt;2&amp;quot;,getTimeStamp(),JSONObject.fromObject(m2).toString());
            RedisMessageWithAck m3 = new RedisMessageWithAck(&amp;quot;list2message&lt;em&gt;3&amp;quot;,
                    msg);
            jedis.lpush(&amp;quot;list2message&lt;/em&gt;3&amp;quot;,JSONObject.fromObject(m3).toString());
            jedis.zadd(&amp;quot;set&lt;em&gt;list2message&lt;/em&gt;3&amp;quot;,getTimeStamp(),JSONObject.fromObject(m3).toString());
            RedisMessageWithAck m4 = new RedisMessageWithAck(&amp;quot;list2message&lt;em&gt;4&amp;quot;,
                    msg);
            jedis.lpush(&amp;quot;list2message&lt;/em&gt;4&amp;quot;,JSONObject.fromObject(m4).toString());
            jedis.zadd(&amp;quot;set&lt;em&gt;list2message&lt;/em&gt;4&amp;quot;,getTimeStamp(),JSONObject.fromObject(m4).toString());
        } catch (Exception e) {
            System.out.println(e);
        } finally {
            if (null != jedis) {
                jedis.close();
            }
        }
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/br&gt;
redis recv with ack like topic
&lt;pre&gt;&lt;code&gt;
    public static void SubscribePattern() {
        long time = getTimeStamp();
        Jedis jedis = null;
        try {
            jedis = new Jedis(&amp;quot;127.0.0.1&amp;quot;, 6379, 30);
            while (true) {
                Set&lt;String&gt; old&lt;em&gt;channel = jedis.keys(&amp;quot;set&lt;/em&gt;list2message&lt;em&gt;*&amp;quot;);
                if (null != old&lt;/em&gt;channel &amp;amp;&amp;amp; 0 != old&lt;em&gt;channel.size()) {
                    Iterator&lt;String&gt; i = old&lt;/em&gt;channel.iterator();
                    while (i.hasNext()) {
                        String s = i.next();
                        Set&lt;String&gt; old = jedis.zrangeByScore(s, 0, time);
                        if (null != old &amp;amp;&amp;amp; 0 != old.size()) {
                            Iterator&lt;String&gt; it = old.iterator();
                            while (it.hasNext()) {
                                String sv = it.next();
                                JSONObject jsonObject = JSONObject
                                        .fromObject(sv);
                                System.out.println(jsonObject);
                                RedisMessageWithAck bean = (RedisMessageWithAck) JSONObject
                                        .toBean(jsonObject);
                                System.out.println(bean.getChannel() + &amp;quot;:&amp;quot;
                                        + bean.getMsg());
                                jedis.zrem(&amp;quot;set&lt;em&gt;&amp;quot; + bean.getChannel(), sv);// ack
                            }
                        }
                    }
                }
                Set&lt;String&gt; keys = jedis.keys(&amp;quot;list2message&lt;/em&gt;*&amp;quot;);
                if (null == keys || 0 == keys.size()) {
                    continue;
                }
                String[] ks = new String[keys.size()];
                keys.toArray(ks);
                List&lt;String&gt; mess = null;
                do {
                    mess = jedis.brpop(0, ks);
                } while (null == mess);
                for (int i = 0; i &amp;lt; mess.size(); i++) {
                    JSONObject jsonObject = JSONObject.fromObject(mess.get(i));
                    System.out.println(jsonObject);
                    RedisMessageWithAck bean = (RedisMessageWithAck) JSONObject
                            .toBean(jsonObject);
                    System.out.println(bean.getChannel() + &amp;quot;:&amp;quot; + bean.getMsg());
                    jedis.zrem(&amp;quot;set_&amp;quot; + bean.getChannel(), mess.get(i));// ack
                    System.out.println(mess.get(i));
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        } finally {
            if (null != jedis) {
                jedis.close();
            }
        }
&lt;/code&gt;&lt;/pre&gt;
&lt;/br&gt;
rabbitmq send with topic
&lt;pre&gt;&lt;code&gt;
public static void publish(String msg) throws IOException {
        ConnectionFactory connFac = new ConnectionFactory();
        connFac.setHost(RmqMsgInfo.Ip);
        Connection conn = null;
        Channel channel = null;
        try {
            conn = connFac.newConnection();
            channel = conn.createChannel();
            String exchangeName = RmqMsgInfo.MsgExchangeForTopic;
            String messageType = RmqMsgInfo.MsgExchangeNameForTopic;
            channel.exchangeDeclare(exchangeName, &amp;quot;topic&amp;quot;);
            channel.basicPublish(exchangeName, messageType, null,
                    msg.getBytes());
            System.out.println(&amp;quot;send message[&amp;quot; + msg + &amp;quot;] to &amp;quot; + exchangeName
                    + &amp;quot; success!&amp;quot;);
        } catch (Exception e) {
            System.err.println(e);
        } finally {
            if (null != channel)
                channel.close();
            if (null != conn)
                conn.close();
        }
    }
&lt;/code&gt;&lt;/pre&gt;
    &lt;/br&gt;
rabbitmq recv with topic
&lt;pre&gt;&lt;code&gt;
public static void subscribe() throws IOException {
        ConnectionFactory connFac = new ConnectionFactory();
        connFac.setHost(RmqMsgInfo.Ip);
        Connection conn = null;
        Channel channel = null;
        try {
            conn = connFac.newConnection();
            channel = conn.createChannel();
            String exchangeName = RmqMsgInfo.MsgExchangeForTopic;
            channel.exchangeDeclare(exchangeName, &amp;quot;topic&amp;quot;);
            String queueName = channel.queueDeclare().getQueue();
            channel.queueBind(queueName, exchangeName,
                    RmqMsgInfo.MsgExchangePatternForTopic);
            QueueingConsumer consumer = new QueueingConsumer(channel);
            boolean autoack = true;
            channel.basicConsume(queueName, autoack, consumer); // 为了高性能，必须这样用，不要用basic.get
            int i = 0;
            while (true) {
                Delivery delivery = consumer.nextDelivery();
                String msg = new String(delivery.getBody());
                System.out.println(&amp;quot;idx:&amp;quot; + i + &amp;quot;received message[&amp;quot; + msg + &amp;quot;] from &amp;quot;
                        + exchangeName);
                if(i == 9999) break;
                i++;
            }
        } catch (Exception e) {
            System.err.println(e);
        } finally {
            if (null != channel)
                channel.close();
            if (null != conn)
                conn.close();
        }
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;h5&gt;测试结果&lt;/h5&gt;

&lt;p&gt;10000次循环，看需要多少时间&lt;br&gt;
&lt;img src=&quot;/img/redis-vs-rabbitmq/rc.png&quot; alt=&quot;result&quot;&gt;
&lt;/br&gt;
分析其原因主要还是可以这些问题导致的：&lt;br&gt;
1. redis是单进程单线程，rabbitmq是本身就支持分布式的，但是erlang复制消息肯定还
是需要时间，比redis的指针指向慢很多；&lt;br&gt;
2. redis功能简单，流水线短，rabbitmq功能复杂，流水线长，缴税多了；&lt;br&gt;
3. c相比erlang是不是还是有运行上的优势？&lt;br&gt;
4. 不测多客户并发了，测试并发rabbitmq估计吃亏还要多；  &lt;/p&gt;

&lt;h4&gt;建议和意见&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;如果人手够，redis可以维护和运维，那么首选redis；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如果rabbitmq能满足压力，但是rabbitmq会比较省心；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;如果数据量大，并发大，还是redis；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;在互联网行业，没有理由不是首选redis；&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>vim配置</title>
   <link href="http://www.94geek.com/2014/08/30/vim.html"/>
   <updated>2014-08-30T00:00:00+08:00</updated>
   <id>/2014/08/30/vim</id>
   <content type="html">&lt;h4&gt;摘要&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/vim/vim.jpg&quot; alt=&quot;VIM&quot;&gt;
&lt;/br&gt;
这次主要讲讲VIM对于一些&amp;quot;古怪&amp;quot;安静绑定的前因后果。这有助于我们更加了解VIM的历史
。然后再讲一下，在现在的键盘上，我们怎么通过&amp;quot;经济&amp;quot;的办法来达到使用VIM时，能保
证小手指尽量的舒适，一些按键能尽量的控制在键盘的大区内；然后，我会讲一下我的
VIM配置文件的组成，以及为什么我要用这种方法来配置我的VIM。最后当然是重头的VIM
配置文件。  &lt;/p&gt;

&lt;h4&gt;解放你的小手指&lt;/h4&gt;

&lt;p&gt;讲VIM的小手指问题，我们得先讲讲VIM的出生年代。在Bill Joy开发VI的时候，其实他使
用的机器是ADM-3A。这款机器的键盘和现在机器的键盘是不一样的，详细看图：&lt;br&gt;
&lt;img src=&quot;/img/vim/vim-kb.jpg&quot; alt=&quot;ADM-3A的键盘&quot;&gt;
这是理解了吧。这不是Joy有意，实在是他使用的键盘CTRL的按键确实很方便，所以快捷
键很多都是CTRL。后来计算机键盘的发展把CTRL放到了下角，才导致了现在使用VIM的时
候，只要时间一长，小手指就像不是你的一样。&lt;br&gt;
再看一下键盘的上下左右按键，分别对应的是HJKL，所以VIM也就使用这几个键来作为基
本的移动按键。我觉得如果但是的键盘上有单独的上下左右按键，Joy应该也会随大流吧
。PS：其实后来有一款游戏CS（一款对战游戏）还重新定义了一种叫做WASD的移动风格。&lt;br&gt;
还有一个就是ESC，对于ESC按键，当初在键盘上的位置就在CTRL上边，就是现在我们TAB
键的位置，你按按TAB键试试，是不是很上手？&lt;br&gt;
那么面对这种情况，我们不是没有改变的办法，我们改变的办法就是重新绑定我们这几个
功能键，把它绑定到我们自己认为舒服的位置就可以。&lt;br&gt;
具体的方法就是，在你的HOME下新建一个.Xmodmap文件就可以，然后输入以下内容：  &lt;/p&gt;

&lt;!-- more --&gt;

&lt;pre&gt;&lt;code&gt;
keycode 66 = Control_L
keycode 108 = Escape
clear Lock
add Control = Control_L
keycode 135 = Caps_Lock
add Lock = Caps_Lock
&lt;/code&gt;&lt;/pre&gt;  

&lt;p&gt;有的时候，你具体的键值可能是不一样的，这个时候你必须要使用软件来检测一下你的键
盘上CAPS、CTRP，ALT（right）和ESC的键值各是多少，然后根据你的实际情况换进去就
可以。&lt;br&gt;
如果你的米足够，并且是一个键盘党，那么这里推荐一款键盘，HHKB。其貌不扬的外观下
面是一颗静电容的芯。目前我使用的就是这款，它的键盘布局就非常适合Linux的CUI操作
用户，特别是VIMer。但是不适合Emacer（因为按键太少了，也没带脚踏板功能！)&lt;br&gt;
&lt;img src=&quot;/img/vim/hhkb.jpg&quot; alt=&quot;HHKB&quot;&gt;&lt;/p&gt;

&lt;h4&gt;VIM配置的进化&lt;/h4&gt;

&lt;p&gt;在很久之前，好像是3年吧。那个时候VIM的插件管理还没有什么好的办法。一般的做法都
是从vim.org上下载一个插件，然后解压，在cp到你的.vim目录下。如果有需要，再在
vimrc中配置一下插件，个性化一下或者重新绑定几个快捷键什么的。但是这种插件的管
理方法看似很简单，实则非常落后。主要是
1. 乱，你的.vim文件夹的子文件夹内到处充满了不知道是什么插件的问题；&lt;br&gt;
2. 不要禁用插件。当你想试用一下某个插件，等你安装完后觉得不爽，想删除的时候，
因为它是散落在多个文件夹的，所以你根本无法去删除或者是删除干净；&lt;br&gt;
3. 版本不好控制。这种方式一般都是自己管理版本。把vimrc和.vim下面的文件全部签到
你自己的github或者googlecode上，这样就可以了，但是如果插件本身升级了，你还得手
动的去下载一个插件，覆盖掉你本地的插件，然后在签入自己的。或者你fork一个子项目
，然后定期更新什么的。反正比较麻烦。&lt;br&gt;
后来，估计是有几个VIMer对于这种方式实在恼火了，vundle这类&amp;quot;全家旅游，杀人越货&amp;quot;
级别的必备良药出现了。大家很快就使用了这种方式来管理。瞬间&amp;quot;这个世界变的清静了
&amp;quot;.  &lt;/p&gt;

&lt;h4&gt;VIM配置文件&lt;/h4&gt;

&lt;p&gt;首先，我的配置文件由4个分文件构成。原因就是全部写在一个vimrc中的话，这个文件实
在太长了，也无法很好的定位和管理。所以我就把这个总的vimrc文件分成了4个文件。具
体如下:&lt;br&gt;
1. main.vimrc 这个是主vimrc文件，里面加载另外的3个文件，并且一些基本的vim配置
都是在这个文件中完成；&lt;br&gt;
2. bundle.vimrc 这个vimrc文件主要配置了你需要使用的第三方插件；要使用这个文件
，必须先安装vundle插件；&lt;br&gt;
3. keymmaping.vimrc 这个文件是快捷键绑定文件，主要就是一些vim内置功能（不包括第
三方插件，第三方插件的快捷键在bundle.vimrc中配置）的快捷键；&lt;br&gt;
4. function.vimrc 这个文件主要管理一些自定义的功能函数。一般都是使用vim script
写的简单功能。&lt;br&gt;
&lt;pre&gt;&lt;code&gt;
&amp;quot;==========================================
&amp;quot; Base Settings  基本设置 main.vimrc
&amp;quot;==========================================
&lt;/br&gt;
:set nocompatible
&lt;/br&gt;
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; Include vimrc 读取子vimrc
&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;
&amp;quot; install Vundle bundles
if filereadable(expand(&amp;quot;~/.vim/myvim/bundle.vimrc&amp;quot;))
  source ~/.vim/myvim/bundle.vimrc
endif
&lt;/br&gt;
&amp;quot; ensure ftdetect et al work by including this after the Vundle stuff
filetype plugin indent on
&lt;/br&gt;
&amp;quot;loading key-mapping
if filereadable(expand(&amp;quot;~/.vim/myvim/keymapping.vimrc&amp;quot;))
  source ~/.vim/myvim/keymapping.vimrc
endif
&lt;/br&gt;
&amp;quot;loading function
if filereadable(expand(&amp;quot;~/.vim/myvim/function.vimrc&amp;quot;))
  source ~/.vim/myvim/function.vimrc
endif
&lt;/br&gt;
&amp;quot;自动启用vimrc配置
autocmd! bufwritepost .vimrc source ~/.vimrc
:set switchbuf=useopen
&amp;quot;设置光标可以到最后一个字面后
set virtualedit=onemore
&amp;quot;设置快捷键等待时间
 &amp;quot; set timeout timeoutlen=300
 set timeout ttimeoutlen=-1
&amp;quot;设置退格键为删除键
set backspace=indent,eol,start
&amp;quot;设置移动命令在行首或者行尾时依然有效
set whichwrap+=b,s,&amp;lt;,&amp;gt;,[,]
set whichwrap+=&amp;lt;,&amp;gt;,h,l
&amp;quot;设置历史命令保存数
set history=1000
&amp;quot;关闭智能补全预览窗口
set completeopt=longest,menu
&amp;quot;设置鼠标可以选择文本
set selectmode+=mouse
&amp;quot;设置自动读取外面对于文件的变更
set autoread
&amp;quot;设置命令行高度为2
set cmdheight=1
set nobackup
set nowb
set noswapfile
&amp;quot;与windows共享剪贴板
set clipboard+=unnamed
&amp;quot;set clipboard+=unamedplus
&amp;quot;增强模式中的命令行自动完成操作
set wildmenu
&amp;quot;开启鼠标
set mouse=a
&amp;quot; 启动的时候不显示那个援助索马里儿童的提示
set shortmess=atI
&amp;quot; 不让vim发出讨厌的滴滴声
set novisualbell         &amp;quot; don&amp;#39;t beep
set noerrorbells
&amp;quot;自动切换当前目录为当前文件所在目录
set autochdir
&amp;quot;打开时忽略文件名后缀
set wildignore+=*.o,*.obj,*.pyc,*.db,*.swp,*.bak,*.class
&amp;quot;默认就是全buffer搜索
set gdefault
&amp;quot;切换到当前tab打开文件的路径下
autocmd BufEnter * cd %:p:h
&amp;quot;检测文件类型
filetype on
&amp;quot;针对不同的文件类型采用不同的缩进格式
filetype indent on
&amp;quot;允许插件
filetype plugin on
&amp;quot;启动自动补全
filetype plugin indent on
&amp;quot;create undo file
set undolevels=1000         &amp;quot; How many undos
set undoreload=10000        &amp;quot; number of lines to save for undo
if v:version &amp;gt;= 730
    set undofile                &amp;quot; keep a persistent backup file
    set undodir=/tmp/vimundo/
endif
&amp;quot; 修复ctrl+m 多光标操作选择的bug，但是改变了ctrl+v进行字符选中时将包含光标下的字符
&amp;quot;set selection=exclusive
&amp;quot; set selection=inclusive
&amp;quot; set selectmode=mouse,key
&amp;quot; No annoying sound on errors
set title                &amp;quot; change the terminal&amp;#39;s title
set t&lt;em&gt;vb=
set tm=500
&amp;quot; Remember info about open buffers on close&amp;quot;
set viminfo^=%
&amp;quot; For regular expressions turn magic on
set magic
&lt;/br&gt;
&amp;quot;==========================================
&amp;quot; Display Settings 展示/排版等界面格式设置
&amp;quot;==========================================
&amp;quot;设置一行字数
set tw=78
&amp;quot;折行
set lbr
&amp;quot;中文折行不断字
set fo+=mB
:set formatoptions+=mM &amp;quot;format for chinese
&amp;quot; 高亮显示匹配的括号
set showmatch
&amp;quot;带有如下符号的单词不要被换行分割
set iskeyword+=$,@,%,#,-,&lt;/em&gt;_
set ambiwidth=double
&amp;quot;开启行号显示
:set number
&amp;quot;显示当前的行号列号：
set ruler
&amp;quot;&amp;quot;在状态栏显示正在输入的命令
set showcmd
&amp;quot; Show current mode
set showmode
&amp;quot; Set 7 lines to the cursor - when moving vertically using j/k 上下滚动,始终在中间
set scrolloff=7
&amp;quot; 命令行（在状态行下）的高度，默认为1，这里是2
 set statusline=%&amp;lt;%f\ %h%m%r%=%k[%{(&amp;amp;fenc==\&amp;quot;\&amp;quot;)?&amp;amp;enc:&amp;amp;fenc}%{(&amp;amp;bomb?\&amp;quot;,BOM\&amp;quot;:\&amp;quot;\&amp;quot;)}]\ %-14.(%l,%c%V%)\ %P
&amp;quot; Always show the status line
set laststatus=2
&amp;quot; 取消换行。
&amp;quot; set nowrap
&amp;quot; How many tenths of a second to blink when matching brackets
set mat=2
&amp;quot; 突出显示当前行等
&amp;quot; set cursorcolumn
set cursorline          &amp;quot; 突出显示当前行
&lt;/br&gt;
&amp;quot;设置文内智能搜索提示
&amp;quot; 高亮search命中的文本。
set hlsearch
&amp;quot; 搜索时忽略大小写
set ignorecase
&amp;quot; 在搜索时，输入的词句的逐字符高亮（类似firefox的搜索）
set incsearch
&amp;quot; 有一个或以上大写字母时仍大小写敏感
set smartcase     &amp;quot; ignore case if search pattern is all lowercase, case-sensitive otherwise
&lt;/br&gt;
&amp;quot; 代码折叠
set foldenable
&amp;quot; 折叠方法
&amp;quot; manual    手工折叠
&amp;quot; indent    使用缩进表示折叠
&amp;quot; expr      使用表达式定义折叠
&amp;quot; syntax    使用语法定义折叠
&amp;quot; diff      对没有更改的文本进行折叠
&amp;quot; marker    使用标记进行折叠, 默认标记是 }
set foldmethod=marker
set foldlevel=1
&lt;/br&gt;
&amp;quot; 缩进配置
set smartindent   &amp;quot; Smart indent
set autoindent    &amp;quot; always set autoindenting on
set copyindent
&amp;quot; never add copyindent, case error   &amp;quot; copy the previous indentation on autoindenting
&amp;quot;c程序可以在v模式中按=格式化
set cin
set cursorline
&lt;/br&gt;
&amp;quot; tab相关变更
set tabstop=4     &amp;quot; 设置Tab键的宽度        [等同的空格个数]
set shiftwidth=4  &amp;quot; number of spaces to use for autoindenting
set softtabstop=4 &amp;quot; 按退格键时可以一次删掉 4 个空格
set smarttab      &amp;quot; insert tabs on the start of a line according to shiftwidth, not tabstop 按退格键时可以一次删掉 4 个空格
set expandtab     &amp;quot; 将Tab自动转化成空格    [需要输入真正的Tab键时，使用 Ctrl+V + Tab]
set shiftround    &amp;quot; use multiple of shiftwidth when indenting with &amp;#39;&amp;lt;&amp;#39; and &amp;#39;&amp;gt;&amp;#39;
set cindent shiftwidth=4
set autoindent shiftwidth=4
&lt;/br&gt;
&amp;quot; A buffer becomes hidden when it is abandoned
&amp;quot; 允许在有未保存的修改时切换缓冲区，此时的修改由 vim 负责保存
set hidden
set autowrite
set wildmode=list:longest
set ttyfast
&lt;/br&gt;
&amp;quot;设置 退出vim后，内容显示在终端屏幕, 可以用于查看和复制
&amp;quot;好处：误删什么的，如果以前屏幕打开，可以找回
set t&lt;em&gt;ti= t&lt;/em&gt;te=
&lt;/br&gt;
&amp;quot;==========================================
&amp;quot; FileEncode Settings 文件编码,格式
&amp;quot;==========================================
&amp;quot; 设置新文件的编码为 UTF-8
set encoding=utf-8
&amp;quot; 自动判断编码时，依次尝试以下编码：
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
&lt;/br&gt;
&amp;quot;如果帮助无法显示中文,增加这句试试:
set helplang=cn
&lt;/br&gt;
&amp;quot; 下面这句只影响普通模式 (非图形界面) 下的 Vim。
set termencoding=utf-8
&lt;/br&gt;
&amp;quot; Use Unix as the standard file type
set ffs=unix,dos,mac
&lt;/br&gt;
&amp;quot; 如遇Unicode值大于255的文本，不必等到空格再折行。
set formatoptions+=m
&lt;/br&gt;
&amp;quot; 合并两行中文时，不在中间加空格：
set formatoptions+=B
&lt;/br&gt;
if has(&amp;quot;win32&amp;quot;) || has(&amp;quot;win64&amp;quot;)
    set fileencoding=chinese
else
    set fileencodings=utf-8,chinese,latin-1
endif
&lt;/br&gt;
if !has(&amp;quot;gui&lt;em&gt;running&amp;quot;)
    :set tenc=utf-8,gb2312,chinese
endif
&lt;/br&gt;
&amp;quot;解决consle输出乱码
language messages zh&lt;/em&gt;CN.utf-8
&lt;/br&gt;
&amp;quot;==========================================
&amp;quot; Theme Settings  主题设置
&amp;quot;==========================================
&lt;/br&gt;
&amp;quot; Set extra options when running in GUI mode
if has(&amp;quot;gui&lt;em&gt;running&amp;quot;)
    set guifont=Monaco:h14
    set guioptions-=T
    set guioptions+=e
    set guioptions-=r
    set guioptions-=L
    set guitablabel=%M\ %t
    set showtabline=1
    set linespace=2
    set noimd
    &amp;quot; set t&lt;/em&gt;Co=256
    &amp;quot;定义givm的颜色和去掉gvim的工具栏
    set guioptions-=T
&lt;/br&gt;
    &amp;quot;高亮显示
    if &amp;amp;t&lt;em&gt;Co &amp;gt; 2
        syntax on
        set hlsearch
    endif
endif
&lt;/br&gt;
&amp;quot;当终端支持颜色显示时打开彩色显示
if &amp;amp;t&lt;/em&gt;Co &amp;gt; 1
    syntax enable
endif
&lt;/br&gt;
&amp;quot; theme主题
&amp;quot;背景变暗dark，亮设置为light
set background=dark
&amp;quot;colorscheme solarized
&amp;quot; colorscheme elise
set t&lt;em&gt;Co=256
&lt;/br&gt;
hi cursorline guibg=#333333     &amp;quot; highlight bg color of current line
hi CursorColumn guibg=#333333   &amp;quot; highlight cursor
&lt;/br&gt;
&amp;quot;设置标记一列的背景颜色和数字一行颜色一致
hi! link SignColumn   LineNr
hi! link ShowMarksHLl DiffAdd
hi! link ShowMarksHLu DiffChange
&lt;/br&gt;
&amp;quot;&amp;quot; for error highlight，防止错误整行标红导致看不清
highlight clear SpellBad
highlight SpellBad term=standout ctermfg=1 term=underline cterm=underline
highlight clear SpellCap
highlight SpellCap term=underline cterm=underline
highlight clear SpellRare
highlight SpellRare term=underline cterm=underline
highlight clear SpellLocal
highlight SpellLocal term=underline cterm=underline
&lt;/br&gt;
&amp;quot;==========================================
&amp;quot; others 其它设置
&amp;quot;==========================================
autocmd! bufwritepost _vimrc source % &amp;quot; vimrc文件修改之后自动加载。 windows。
autocmd! bufwritepost .vimrc source % &amp;quot; vimrc文件修改之后自动加载。 linux。
&lt;/br&gt;
&amp;quot; 自动补全配置
&amp;quot;让Vim的补全菜单行为与一般IDE一致(参考VimTip1228)
set completeopt=longest,menu
&lt;/br&gt;
&amp;quot;离开插入模式后自动关闭预览窗口
autocmd InsertLeave * if pumvisible() == 0|pclose|endif
&lt;/br&gt;
&amp;quot; if this not work ,make sure .viminfo is writable for you
if has(&amp;quot;autocmd&amp;quot;)
  au BufReadPost * if line(&amp;quot;&amp;#39;\&amp;quot;&amp;quot;) &amp;gt; 1 &amp;amp;&amp;amp; line(&amp;quot;&amp;#39;\&amp;quot;&amp;quot;) &amp;lt;= line(&amp;quot;$&amp;quot;) | exe &amp;quot;normal! g&amp;#39;\&amp;quot;&amp;quot; | endif
endif
&lt;/code&gt;&lt;/pre&gt;
&lt;/br&gt;
&lt;pre&gt;&lt;code&gt;&lt;br&gt;
&amp;quot;==========================================
    &amp;quot;配置插件管理 bundle.vimrc
&amp;quot;==========================================
filetype off
&lt;/br&gt;
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
&lt;/br&gt;
Bundle &amp;quot;vundle&amp;quot;
&lt;/br&gt;
&amp;quot; 多语言语法检查
Bundle &amp;#39;scrooloose/syntastic&amp;#39;
let g:syntastic&lt;/em&gt;error&lt;em&gt;symbol=&amp;#39;&amp;gt;&amp;gt;&amp;#39;
let g:syntastic&lt;/em&gt;warning&lt;em&gt;symbol=&amp;#39;&amp;gt;&amp;#39;
let g:syntastic&lt;/em&gt;check&lt;em&gt;on&lt;/em&gt;open=1
let g:syntastic&lt;em&gt;enable&lt;/em&gt;highlighting = 0
let g:syntastic&lt;em&gt;python&lt;/em&gt;checkers=[&amp;#39;pyflakes&amp;#39;] &amp;quot; 使用pyflakes,速度比pylint快
highlight SyntasticErrorSign guifg=white guibg=black
&lt;/br&gt;
Bundle &amp;#39;genutils&amp;#39;
&lt;/br&gt;
Bundle &amp;#39;xvhfeng/c.vim&amp;#39;
map &amp;lt;c-x&amp;gt;c \cc
map &amp;lt;c-x&amp;gt;u \co
&lt;/br&gt;
&amp;quot; Bundle &amp;#39;The-NERD-Commenter&amp;#39;
Bundle &amp;#39;ShowTrailingWhitespace&amp;#39;
&lt;/br&gt;
Bundle &amp;#39;EasyMotion&amp;#39;
let g:EasyMotion&lt;em&gt;leader&lt;/em&gt;key = &amp;#39;f&amp;#39;
&lt;/br&gt;
Bundle &amp;#39;FencView.vim&amp;#39;
&lt;/br&gt;
Bundle &amp;#39;The-NERD-tree&amp;#39;
let NERDTreeWinPos = &amp;quot;left&amp;quot; &amp;quot;where NERD tree window is placed on the screen
let NERDTreeWinSize = 30 &amp;quot;size of the NERD tree
nmap &amp;lt;F7&amp;gt; &amp;lt;ESC&amp;gt;:NERDTreeToggle&amp;lt;RETURN&amp;gt;&amp;quot; Open and close the NERD&lt;em&gt;tree.vim separately
&lt;/br&gt;
Bundle &amp;#39;auto&lt;/em&gt;mkdir&amp;#39;
&lt;/br&gt;
Bundle &amp;#39;bufexplorer.zip&amp;#39;
:vmap &amp;lt;c-x&amp;gt;b &amp;lt;esc&amp;gt;:w!&amp;lt;esc&amp;gt;,be
:nmap &amp;lt;c-x&amp;gt;b &amp;lt;esc&amp;gt;:w!&amp;lt;esc&amp;gt;,be
&lt;/br&gt;
Bundle &amp;#39;CRefVim&amp;#39;
if !hasmapto(&amp;#39;&amp;lt;Plug&amp;gt;CRV&lt;em&gt;CRefVimInvoke&amp;#39;)
    map &amp;lt;silent&amp;gt; &amp;lt;unique&amp;gt; &amp;lt;Leader&amp;gt;ci &amp;lt;Plug&amp;gt;CRV&lt;/em&gt;CRefVimInvoke
endif
&lt;/br&gt;
Bundle &amp;#39;DoxygenToolkit.vim&amp;#39;
let g:DoxygenToolkit&lt;em&gt;briefTag&lt;/em&gt;pre=&amp;quot;@Remark:&amp;quot;
let g:DoxygenToolkit&lt;em&gt;paramTag&lt;/em&gt;pre=&amp;quot;@Param:&amp;quot;
let g:DoxygenToolkit&lt;em&gt;returnTag=&amp;quot;@Returns:&amp;quot;
map &amp;lt;c-x&amp;gt;f &amp;lt;ESC&amp;gt;:Dox&amp;lt;cr&amp;gt;
&lt;/br&gt;
Bundle &amp;#39;grep.vim&amp;#39;
:nmap &amp;lt;c-g&amp;gt; &amp;lt;ESC&amp;gt;:Grep&amp;lt;CR&amp;gt;
&lt;/br&gt;
Bundle &amp;#39;lookupfile&amp;#39;
&amp;quot; lookup file with ignore case
        function! LookupFile&lt;/em&gt;IgnoreCaseFunc(pattern)
        let &lt;em&gt;tags = &amp;amp;tags
        try
            let &amp;amp;tags = eval(g:LookupFile&lt;/em&gt;TagExpr)
            let newpattern = &amp;#39;\c&amp;#39; . a:pattern
            let tags = taglist(newpattern)
        catch
            echohl ErrorMsg | echo &amp;quot;Exception: &amp;quot; . v:exception | echohl NONE
            return &amp;quot;&amp;quot;
        finally
            let &amp;amp;tags = &lt;em&gt;tags
        endtry
    &amp;quot; Show the matches for what is typed so far.
        let files = map(tags, &amp;#39;v:val[&amp;quot;filename&amp;quot;]&amp;#39;)
        return files
    endfunction
&lt;/br&gt;
let g:LookupFile&lt;/em&gt;LookupFunc = &amp;#39;LookupFile&lt;em&gt;IgnoreCaseFunc&amp;#39;
let g:LookupFile&lt;/em&gt;MinPatLength = 2
let g:LookupFile&lt;em&gt;PreserveLastPattern = 0
let g:LookupFile&lt;/em&gt;PreservePatternHistory = 1
let g:LookupFile&lt;em&gt;AlwaysAcceptFirst = 1
let g:LookupFile&lt;/em&gt;AllowNewFiles = 0
&amp;quot;if filereadable(&amp;quot;./filenametags&amp;quot;)
&amp;quot;let g:LookupFile&lt;em&gt;TagExpr = &amp;#39;&amp;quot;./filenametags&amp;quot;&amp;#39;
&amp;quot;endif
nmap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;lf :LookupFile&amp;lt;cr&amp;gt;
nmap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;lb :LUBufs&amp;lt;cr&amp;gt;
nmap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;lw :LUWalk&amp;lt;cr&amp;gt;
&lt;/br&gt;
Bundle &amp;#39;ShowMarks&amp;#39;
&lt;/br&gt;
Bundle &amp;#39;statusline.vim&amp;#39;
&lt;/br&gt;
Bundle &amp;#39;taglist.vim&amp;#39;
let Tlist&lt;/em&gt;Exit&lt;em&gt;OnlyWindow = 1
&amp;quot;taglist窗口是否出现在右边，默认是左边
let Tlist&lt;/em&gt;Use&lt;em&gt;Right&lt;/em&gt;Window = 1
&amp;quot;是否在选择了taglist后自动关闭taglist窗口
let Tlist&lt;em&gt;Close&lt;/em&gt;On&lt;em&gt;Select = 0
&amp;quot;是否在打开了taglist的同时把焦点设置到taglist窗口
let Tlist&lt;/em&gt;GainFocus&lt;em&gt;On&lt;/em&gt;ToggleOpen = 1
&amp;quot;当多个文件在taglist从显示的时候，只打开当前文件，折叠别的文件
let Tlist&lt;em&gt;File&lt;/em&gt;Fold&lt;em&gt;Auto&lt;/em&gt;Close = 0
let Tlist&lt;em&gt;Auto&lt;/em&gt;Update = 1
&amp;quot;map &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;tl :TlistToggle&amp;lt;cr&amp;gt;
map &amp;lt;F8&amp;gt; &amp;lt;ESC&amp;gt;:TlistToggle&amp;lt;cr&amp;gt;
&lt;/br&gt;
Bundle &amp;#39;vmark.vim--Visual-Bookmarking&amp;#39;
&lt;/br&gt;
Bundle &amp;#39;terryma/vim-multiple-cursors&amp;#39;
let g:multi&lt;em&gt;cursor&lt;/em&gt;use&lt;em&gt;default&lt;/em&gt;mapping=1
let g:multi&lt;em&gt;cursor&lt;/em&gt;next&lt;em&gt;key=&amp;#39;&amp;lt;C-n&amp;gt;&amp;#39;
let g:multi&lt;/em&gt;cursor&lt;em&gt;prev&lt;/em&gt;key=&amp;#39;&amp;lt;C-p&amp;gt;&amp;#39;
let g:multi&lt;em&gt;cursor&lt;/em&gt;skip&lt;em&gt;key=&amp;#39;&amp;lt;C-k&amp;gt;&amp;#39;
let g:multi&lt;/em&gt;cursor&lt;em&gt;quit&lt;/em&gt;key=&amp;#39;&amp;lt;Esc&amp;gt;&amp;#39;
&lt;/br&gt;
Bundle &amp;#39;Yggdroot/indentLine&amp;#39;
&amp;quot;config for indentLine
let g:indentLine&lt;em&gt;indentLevel = 5
let g:indentLine&lt;/em&gt;enabled = 1
&amp;quot;hi Conceal ctermfg=red ctermbg=red
&amp;quot;let g:indentLine&lt;em&gt;char = &amp;#39;|&amp;#39;
&lt;/br&gt;
Bundle &amp;#39;a.vim&amp;#39;
&amp;quot;设置c语言的header和c文件转换
:nmap &amp;lt;C-x&amp;gt;h &amp;lt;ESC&amp;gt;:w!&amp;lt;ESC&amp;gt;:A!&amp;lt;CR&amp;gt;
&lt;/br&gt;
Bundle &amp;#39;Valloric/YouCompleteMe&amp;#39;
let g:ycm&lt;/em&gt;global&lt;em&gt;ycm&lt;/em&gt;extra&lt;em&gt;conf = &amp;#39;~/.ycm&lt;/em&gt;extra&lt;em&gt;conf.py&amp;#39;
let g:ycm&lt;/em&gt;error&lt;em&gt;symbol = &amp;#39;&amp;gt;&amp;gt;&amp;#39;
let g:ycm&lt;/em&gt;warning&lt;em&gt;symbol = &amp;#39;&amp;gt;*&amp;#39;
let g:ycm&lt;/em&gt;min&lt;em&gt;num&lt;/em&gt;of&lt;em&gt;chars&lt;/em&gt;for&lt;em&gt;completion = 2
let g:ycm&lt;/em&gt;min&lt;em&gt;num&lt;/em&gt;identifier&lt;em&gt;candidate&lt;/em&gt;chars = 0
&amp;quot; 直接触发自动补全
let g:ycm&lt;em&gt;key&lt;/em&gt;invoke&lt;em&gt;completion = &amp;#39;&amp;lt;c-x&amp;gt;&amp;lt;c-o&amp;gt;&amp;#39;
let g:ycm&lt;/em&gt;cache&lt;em&gt;omnifunc = 1
let g:ycm&lt;/em&gt;auto&lt;em&gt;trigger = 0
let g:ycm&lt;/em&gt;enable&lt;em&gt;diagnostic&lt;/em&gt;signs = 0
let g:ycm&lt;em&gt;enable&lt;/em&gt;diagnostic&lt;em&gt;highlighting = 1
let g:ycm&lt;/em&gt;echo&lt;em&gt;current&lt;/em&gt;diagnostic = 1
&amp;quot;youcompleteme  默认tab  s-tab 和自动补全冲突
let g:ycm&lt;em&gt;key&lt;/em&gt;list&lt;em&gt;select&lt;/em&gt;completion=[&amp;#39;&amp;lt;c-n&amp;gt;&amp;#39;]
&amp;quot; let g:ycm&lt;em&gt;key&lt;/em&gt;list&lt;em&gt;select&lt;/em&gt;completion = [&amp;#39;&amp;lt;Down&amp;gt;&amp;#39;]
let g:ycm&lt;em&gt;key&lt;/em&gt;list&lt;em&gt;previous&lt;/em&gt;completion=[&amp;#39;&amp;lt;c-p&amp;gt;&amp;#39;]
&amp;quot; let g:ycm&lt;em&gt;key&lt;/em&gt;list&lt;em&gt;previous&lt;/em&gt;completion = [&amp;#39;&amp;lt;Up&amp;gt;&amp;#39;]
let g:ycm&lt;em&gt;complete&lt;/em&gt;in&lt;em&gt;comments = 1  &amp;quot;在注释输入中也能补全
let g:ycm&lt;/em&gt;complete&lt;em&gt;in&lt;/em&gt;strings = 1   &amp;quot;在字符串输入中也能补全
let g:ycm&lt;em&gt;collect&lt;/em&gt;identifiers&lt;em&gt;from&lt;/em&gt;comments&lt;em&gt;and&lt;/em&gt;strings = 1   &amp;quot;注释和字符串中的文字也会被收入补全
let g:ycm&lt;em&gt;seed&lt;/em&gt;identifiers&lt;em&gt;with&lt;/em&gt;syntax=1   &amp;quot;语言关键字补全, 不过python关键字都很短，所以，需要的自己打开
let g:ycm&lt;em&gt;collect&lt;/em&gt;identifiers&lt;em&gt;from&lt;/em&gt;tags&lt;em&gt;files = 1
nnoremap &amp;lt;leader&amp;gt;gd :YcmCompleter GoToDeclaration&amp;lt;CR&amp;gt;
nnoremap &amp;lt;leader&amp;gt;gi :YcmCompleter GoToDefinition&amp;lt;CR&amp;gt;
nnoremap &amp;lt;leader&amp;gt;gb :YcmCompleter GoToDefinitionElseDeclaration&amp;lt;CR&amp;gt;
nmap &amp;lt;leader&amp;gt;yd :YcmDiags&amp;lt;CR&amp;gt;
nmap &amp;lt;F11&amp;gt; :YcmRestartServer&amp;lt;CR&amp;gt;
&lt;/br&gt;
Bundle &amp;#39;terryma/vim-expand-region&amp;#39;
map + &amp;lt;Plug&amp;gt;(expand&lt;/em&gt;region&lt;em&gt;expand)
map _ &amp;lt;Plug&amp;gt;(expand&lt;/em&gt;region&lt;em&gt;shrink)
&lt;/br&gt;
Bundle &amp;#39;tpope/vim-commentary&amp;#39;
&lt;/br&gt;
&amp;quot; 代码片段快速插入
&amp;quot;Bundle &amp;#39;SirVer/ultisnips&amp;#39;
&amp;quot; Snippets are separated from the engine. Add this if you want them:
&lt;/br&gt;
&amp;quot;Bundle &amp;#39;snipMate&amp;#39;
&lt;/br&gt;
Bundle &amp;#39;honza/vim-snippets&amp;#39;
let g:UltiSnipsExpandTrigger = &amp;quot;&amp;lt;tab&amp;gt;&amp;quot;
let g:UltiSnipsJumpForwardTrigger = &amp;quot;&amp;lt;tab&amp;gt;&amp;quot;
&amp;quot; 定义存放代码片段的文件夹 .vim/additional&lt;/em&gt;snippets下，使用自定义和默认的，将会的到全局，有冲突的会提示
let g:UltiSnipsSnippetDirectories=[&amp;quot;additional&lt;em&gt;snippets&amp;quot;, &amp;#39;UltiSnips&amp;#39;]
&lt;/br&gt;
&amp;quot; 自动补全html/xml标签
Bundle &amp;#39;docunext/closetag.vim&amp;#39;
let g:closetag&lt;/em&gt;html&lt;em&gt;style=1
&lt;/br&gt;
&amp;quot; 快速加入修改环绕字符
Bundle &amp;#39;tpope/vim-surround&amp;#39;
&lt;/br&gt;
&amp;quot; for repeat -&amp;gt; enhance surround.vim, . to repeat command
Bundle &amp;#39;tpope/vim-repeat&amp;#39;
&lt;/br&gt;
&amp;quot; 快速去行尾空格 [, + &amp;lt;Space&amp;gt;]
Bundle &amp;#39;bronson/vim-trailing-whitespace&amp;#39;
map &amp;lt;leader&amp;gt;es :FixWhitespace&lt;cr&gt;
&lt;/br&gt;
&amp;quot; 文件搜索
Bundle &amp;#39;kien/ctrlp.vim&amp;#39;
let g:ctrlp&lt;/em&gt;map = &amp;#39;&amp;lt;leader&amp;gt;p&amp;#39;
let g:ctrlp&lt;em&gt;cmd = &amp;#39;CtrlP&amp;#39;
map &amp;lt;leader&amp;gt;f :CtrlPMRU&amp;lt;CR&amp;gt;
&amp;quot;set wildignore+=&lt;em&gt;/tmp/&lt;/em&gt;,&lt;em&gt;.so,&lt;/em&gt;.swp,*.zip     &amp;quot; MacOSX/Linux&amp;quot;
let g:ctrlp&lt;/em&gt;custom&lt;em&gt;ignore = {
    \ &amp;#39;dir&amp;#39;:  &amp;#39;\v[\/].(git|hg|svn|rvm)$&amp;#39;,
    \ &amp;#39;file&amp;#39;: &amp;#39;\v.(exe|so|dll|zip|tar|tar.gz)$&amp;#39;,
    \ }
&amp;quot;\ &amp;#39;link&amp;#39;: &amp;#39;SOME&lt;/em&gt;BAD&lt;em&gt;SYMBOLIC&lt;/em&gt;LINKS&amp;#39;,
let g:ctrlp&lt;em&gt;working&lt;/em&gt;path&lt;em&gt;mode=0
let g:ctrlp&lt;/em&gt;match&lt;em&gt;window&lt;/em&gt;bottom=1
let g:ctrlp&lt;em&gt;max&lt;/em&gt;height=15
let g:ctrlp&lt;em&gt;match&lt;/em&gt;window&lt;em&gt;reversed=0
let g:ctrlp&lt;/em&gt;mruf&lt;em&gt;max=500
let g:ctrlp&lt;/em&gt;follow&lt;em&gt;symlinks=1
&lt;/br&gt;
&amp;quot;状态栏增强展示
&amp;quot; Bundle &amp;#39;Lokaltog/vim-powerline&amp;#39;
&amp;quot;if want to use fancy,need to add font patch -&amp;gt; git clone git://gist.github.com/1630581.git ~/.fonts/ttf-dejavu-powerline
&amp;quot;let g:Powerline&lt;/em&gt;symbols = &amp;#39;fancy&amp;#39;
&amp;quot; let g:Powerline&lt;em&gt;symbols = &amp;#39;unicode&amp;#39;
&lt;/br&gt;
&amp;quot;括号显示增强
Bundle &amp;#39;kien/rainbow&lt;/em&gt;parentheses.vim&amp;#39;
let g:rbpt&lt;em&gt;colorpairs = [
    \ [&amp;#39;brown&amp;#39;,       &amp;#39;RoyalBlue3&amp;#39;],
    \ [&amp;#39;Darkblue&amp;#39;,    &amp;#39;SeaGreen3&amp;#39;],
    \ [&amp;#39;darkgray&amp;#39;,    &amp;#39;DarkOrchid3&amp;#39;],
    \ [&amp;#39;darkgreen&amp;#39;,   &amp;#39;firebrick3&amp;#39;],
    \ [&amp;#39;darkcyan&amp;#39;,    &amp;#39;RoyalBlue3&amp;#39;],
    \ [&amp;#39;darkred&amp;#39;,     &amp;#39;SeaGreen3&amp;#39;],
    \ [&amp;#39;darkmagenta&amp;#39;, &amp;#39;DarkOrchid3&amp;#39;],
    \ [&amp;#39;brown&amp;#39;,       &amp;#39;firebrick3&amp;#39;],
    \ [&amp;#39;gray&amp;#39;,        &amp;#39;RoyalBlue3&amp;#39;],
    \ [&amp;#39;black&amp;#39;,       &amp;#39;SeaGreen3&amp;#39;],
    \ [&amp;#39;darkmagenta&amp;#39;, &amp;#39;DarkOrchid3&amp;#39;],
    \ [&amp;#39;Darkblue&amp;#39;,    &amp;#39;firebrick3&amp;#39;],
    \ [&amp;#39;darkgreen&amp;#39;,   &amp;#39;RoyalBlue3&amp;#39;],
    \ [&amp;#39;darkcyan&amp;#39;,    &amp;#39;SeaGreen3&amp;#39;],
    \ [&amp;#39;darkred&amp;#39;,     &amp;#39;DarkOrchid3&amp;#39;],
    \ [&amp;#39;red&amp;#39;,         &amp;#39;firebrick3&amp;#39;],
    \ ]
let g:rbpt&lt;/em&gt;max = 40
let g:rbpt&lt;em&gt;loadcmd&lt;/em&gt;toggle = 0
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces
&lt;/br&gt;
&amp;quot;################### 显示增强-主题 ###################&amp;quot;
&lt;/br&gt;
&amp;quot;主题 solarized
Bundle &amp;#39;altercation/vim-colors-solarized&amp;#39;
&amp;quot;let g:solarized&lt;em&gt;termcolors=256
let g:solarized&lt;/em&gt;termtrans=1
let g:solarized&lt;em&gt;contrast=&amp;quot;normal&amp;quot;
let g:solarized&lt;/em&gt;visibility=&amp;quot;normal&amp;quot;
&lt;/br&gt;
&amp;quot;主题 molokai
Bundle &amp;#39;tomasr/molokai&amp;#39;
&amp;quot;let g:molokai&lt;em&gt;original = 1
&lt;/br&gt;
&amp;quot;###### Python #########
&amp;quot; python fly check, 弥补syntastic只能打开和保存才检查语法的不足
Bundle &amp;#39;kevinw/pyflakes-vim&amp;#39;
let g:pyflakes&lt;/em&gt;use&lt;em&gt;quickfix = 0
&lt;/br&gt;
&amp;quot; for python.vim syntax highlight
Bundle &amp;#39;hdima/python-syntax&amp;#39;
let python&lt;/em&gt;highlight&lt;em&gt;all = 1
&lt;/br&gt;
&amp;quot;###### Markdown #########
Bundle &amp;#39;plasticboy/vim-markdown&amp;#39;
let g:vim&lt;/em&gt;markdown&lt;em&gt;folding&lt;/em&gt;disabled=1
&lt;/br&gt;
&amp;quot;###### HTML/JS/JQUERY/CSS #########
&lt;/br&gt;
&amp;quot; for javascript
Bundle &amp;quot;pangloss/vim-javascript&amp;quot;
let g:html&lt;em&gt;indent&lt;/em&gt;inctags = &amp;quot;html,body,head,tbody&amp;quot;
let g:html&lt;em&gt;indent&lt;/em&gt;script1 = &amp;quot;inc&amp;quot;
let g:html&lt;em&gt;indent&lt;/em&gt;style1 = &amp;quot;inc&amp;quot;
&lt;/br&gt;
&amp;quot;for jquery
Bundle &amp;#39;nono/jquery.vim&amp;#39;
&lt;/br&gt;
&amp;quot;###### Jinja2 #########
Bundle &amp;#39;Glench/Vim-Jinja2-Syntax&amp;#39;
&lt;/br&gt;
&amp;quot;###### nginx #########
Bundle &amp;#39;evanmiller/nginx-vim-syntax&amp;#39;
&lt;/br&gt;
Bundle &amp;#39;SQLComplete.vim&amp;#39;
let g:sql&lt;em&gt;type&lt;/em&gt;default = &amp;#39;mysql&amp;#39;
&amp;quot;SQLSetType mysql
&lt;/br&gt;
&amp;quot;the markdown editer
Bundle &amp;#39;plasticboy/vim-markdown&amp;#39;
&lt;/br&gt;
&amp;quot;the properties file editor
Bundle &amp;#39;kamichidu/vim-edit-properties&amp;#39;
&lt;/br&gt;
&amp;quot;auto input the right ) ] or }
&amp;quot;Bundle &amp;#39;jiangmiao/auto-pairs&amp;#39;
&lt;/br&gt;
&amp;quot;undo tree
Bundle &amp;#39;mbbill/undotree&amp;#39;
nnoremap &amp;lt;F12&amp;gt; :UndotreeToggle&amp;lt;cr&amp;gt;
if has(&amp;quot;persistent&lt;em&gt;undo&amp;quot;)
    set undodir=&amp;#39;~/.vim/undodir/&amp;#39;
    set undofile
endif
&amp;quot;
&amp;quot; golang
&amp;quot; &amp;quot; Go
&amp;quot; We are using cespare&amp;#39;s modification,
&amp;quot; which uses bradfitz&amp;#39;s goimports instead of gofmt.
&amp;quot; With goimports, you can add missing imports automatically.
&amp;quot; To install goimport:
&amp;quot;   go get github.com/bradfitz/goimports
&amp;quot; Bundle &amp;#39;cespare/vim-golang&amp;#39;
&amp;quot; To install godef:
&amp;quot;   go get code.google.com/p/rog-go/exp/cmd/godef
&amp;quot; Bundle &amp;#39;dgryski/vim-godef&amp;#39;
&amp;quot; To install gocode:
&amp;quot;   go get github.com/nsf/gocode
&amp;quot; Bundle &amp;#39;Blackrush/vim-gocode&amp;#39;
&amp;quot; Bundle &amp;#39;bradfitz/goimports&amp;#39;
&amp;quot; Bundle &amp;#39;UltiSnips&amp;#39;
&amp;quot;Bundle &amp;#39;AutoClose&amp;#39; -- this plug change the timeout and ttimeout fuck.
&amp;quot; 代码缩进
&amp;quot; https://github.com/nathanaelkane/vim-indent-guides
&amp;quot;Bundle &amp;#39;nathanaelkane/vim-indent-guides&amp;#39;
&amp;quot;let g:indent&lt;/em&gt;guides&lt;em&gt;auto&lt;/em&gt;colors = 0
&amp;quot;autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red   ctermbg=3
&amp;quot;autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=green ctermbg=4
&amp;quot;hi IndentGuidesOdd  guibg=red   ctermbg=3
&amp;quot;hi IndentGuidesEven guibg=green ctermbg=4
&amp;quot;hi IndentGuidesOdd  ctermbg=black
&amp;quot;hi IndentGuidesEven ctermbg=darkgrey
&lt;/br&gt;
filetype on
&lt;/code&gt;&lt;/pre&gt;
&lt;/br&gt;
&lt;pre&gt;&lt;code&gt;
&amp;quot;==========================================
&amp;quot; HotKey Settings  自定义快捷键设置 keymmaping.vimrc
&amp;quot;==========================================
let mapleader = &amp;quot;,&amp;quot;
nnoremap ; :
&lt;/br&gt;
&amp;quot; F1 - F6 设置
&amp;quot; F1 废弃这个键,防止调出系统帮助
&amp;quot; F2 行号开关，用于鼠标复制代码用
&amp;quot; F3 显示可打印字符开关
&amp;quot; F4 换行开关
&amp;quot; F5 粘贴模式paste&lt;em&gt;mode开关,用于有格式的代码粘贴
&amp;quot; F6 语法开关，关闭语法可以加快大文件的展示
&lt;/br&gt;
&amp;quot; I can type :help on my own, thanks.  Protect your fat fingers from the evils of &amp;lt;F1&amp;gt;
noremap &amp;lt;F1&amp;gt; &amp;lt;Esc&amp;gt;
&amp;quot;&amp;quot;为方便复制，用&amp;lt;F2&amp;gt;开启/关闭行号显示:
function! HideNumber()
  if(&amp;amp;relativenumber == &amp;amp;number)
    set relativenumber! number!
  elseif(&amp;amp;number)
    set number!
  else
    set relativenumber!
  endif
  set number?
endfunc
nnoremap &amp;lt;F2&amp;gt; :call HideNumber()&amp;lt;CR&amp;gt;
nnoremap &amp;lt;F3&amp;gt; :set list! list?&amp;lt;CR&amp;gt;
nnoremap &amp;lt;F4&amp;gt; :set wrap! wrap?&amp;lt;CR&amp;gt;
&amp;quot;set paste
&amp;quot;when in insert mode, press &amp;lt;F5&amp;gt; to go to
&amp;quot;paste mode, where you can paste mass data
&amp;quot;that won&amp;#39;t be autoindented
set pastetoggle=&amp;lt;F5&amp;gt;
&lt;/br&gt;
&amp;quot; disbale paste mode when leaving insert mode
au InsertLeave * set nopaste
nnoremap &amp;lt;F6&amp;gt; :exec exists(&amp;#39;syntax&lt;/em&gt;on&amp;#39;) ? &amp;#39;syn off&amp;#39; : &amp;#39;syn on&amp;#39;&amp;lt;CR&amp;gt;
&lt;/br&gt;
&amp;quot; 关闭方向键, 强迫自己用 hjkl
map &amp;lt;Left&amp;gt; &amp;lt;Nop&amp;gt;
map &amp;lt;Right&amp;gt; &amp;lt;Nop&amp;gt;
map &amp;lt;Up&amp;gt; &amp;lt;Nop&amp;gt;
map &amp;lt;Down&amp;gt; &amp;lt;Nop&amp;gt;
&lt;/br&gt;
&amp;quot;空格即选中当前项
inoremap &amp;lt;expr&amp;gt; &amp;lt;Space&amp;gt;       pumvisible() ? &amp;quot;&amp;amp;lt;C-y&amp;gt;&amp;amp;lt;Space&amp;gt;&amp;quot; : &amp;quot;&amp;amp;lt;Space&amp;gt;&amp;quot;
&lt;/br&gt;
&amp;quot;上下左右键的行为 会显示其他信息
inoremap &amp;lt;expr&amp;gt; &amp;lt;Down&amp;gt;     pumvisible() ? &amp;quot;&amp;amp;lt;C-n&amp;gt;&amp;quot; : &amp;quot;&amp;amp;lt;Down&amp;gt;&amp;quot;
inoremap &amp;lt;expr&amp;gt; &amp;lt;Up&amp;gt;       pumvisible() ? &amp;quot;&amp;amp;lt;C-p&amp;gt;&amp;quot; : &amp;quot;&amp;amp;lt;Up&amp;gt;&amp;quot;
inoremap &amp;lt;expr&amp;gt; &amp;lt;PageDown&amp;gt; pumvisible() ? &amp;quot;&amp;amp;lt;PageDown&amp;gt;&amp;amp;lt;C-p&amp;gt;&amp;amp;lt;C-n&amp;gt;&amp;quot; : &amp;quot;&amp;amp;lt;PageDown&amp;gt;&amp;quot;
inoremap &amp;lt;expr&amp;gt; &amp;lt;PageUp&amp;gt;   pumvisible() ? &amp;quot;&amp;amp;lt;PageUp&amp;gt;&amp;amp;lt;C-p&amp;gt;&amp;amp;lt;C-n&amp;gt;&amp;quot; : &amp;quot;&amp;amp;lt;PageUp&amp;gt;&amp;quot;
&lt;/br&gt;
&amp;quot;tab 缩进
:nmap &amp;lt;tab&amp;gt;  v&amp;gt;&amp;lt;esc&amp;gt;
:nmap &amp;lt;s-tab&amp;gt; v&amp;lt;&amp;lt;esc&amp;gt;
:vmap &amp;lt;tab&amp;gt; &amp;gt;gv
:vmap &amp;lt;s-tab&amp;gt; &amp;lt;gv
&amp;quot;Reselect visual block after indent/outdent.调整缩进后自动选中，方便再次操作
&amp;quot; 在visual模式下缩进 (无限可重复)
:vnoremap &amp;lt; &amp;lt;gv
&amp;quot; 译释：:vnoremap 重定义了visual模式下 &amp;lt; 符号的含义
&amp;quot; 把它定义成 &amp;lt;gv
&amp;quot; 即：先&amp;lt;向外缩进，然后gv重新选择上一次选择了的区域
&amp;quot; 这样在visual模式下就可以实现连续按&amp;lt;而连续缩进了
:vnoremap &amp;gt; &amp;gt;gv
&amp;quot; 同里，内缩
&amp;quot;:vmap &amp;lt;tab&amp;gt; &amp;gt;gv
&amp;quot;:imap &amp;lt;s-tab&amp;gt; &amp;lt;Left&amp;gt;
&lt;/br&gt;
&amp;quot;粘贴后剪切版不变
xnoremap p pgvy
noremap vp viwpgvy
noremap vy yiw
noremap Y y$
&lt;/br&gt;
&amp;quot;设置复制使用window粘贴板
:nmap &amp;lt;C-p&amp;gt; &amp;quot;+p
:vmap &amp;lt;C-y&amp;gt; &amp;quot;+y
:nmap Y y$
:vmap Y y$
&amp;quot; y$ -&amp;gt; Y Make Y behave like other capitals
map Y y$
&lt;/br&gt;
&amp;quot;emacs style
&amp;quot;:set winaltkeys=no
:imap &amp;lt;C-e&amp;gt; &amp;lt;END&amp;gt;
:imap &amp;lt;C-a&amp;gt; &amp;lt;HOME&amp;gt;
:imap &amp;lt;C-b&amp;gt; &amp;lt;Left&amp;gt;
:imap &amp;lt;C-n&amp;gt; &amp;lt;Down&amp;gt;
:imap &amp;lt;C-p&amp;gt; &amp;lt;Up&amp;gt;
:imap &amp;lt;C-f&amp;gt; &amp;lt;Right&amp;gt;
:imap &amp;lt;C-v&amp;gt; &amp;lt;PageDown&amp;gt;
:imap &amp;lt;C-u&amp;gt; &amp;lt;PageUp&amp;gt;
:imap &amp;lt;C-d&amp;gt; &amp;lt;Delete&amp;gt;
:imap &amp;lt;C-r&amp;gt; &amp;lt;BackSpace&amp;gt;
:imap &amp;lt;c-w&amp;gt;&amp;lt;c-b&amp;gt; &amp;lt;s-left&amp;gt;
:imap &amp;lt;c-w&amp;gt; &amp;lt;s-right&amp;gt;
:imap &amp;lt;c-e&amp;gt;&amp;lt;c-b&amp;gt; &amp;lt;END&amp;gt;&amp;lt;Left&amp;gt;
&lt;/br&gt;
nmap &amp;lt;leader&amp;gt;w :w!&amp;lt;cr&amp;gt;
nmap &amp;lt;leader&amp;gt;e :e&amp;lt;SPACE&amp;gt;
nmap &amp;lt;leader&amp;gt;s i&amp;lt;space&amp;gt;&amp;lt;esc&amp;gt;
nmap K i&amp;lt;cr&amp;gt;&amp;lt;esc&amp;gt;
&lt;/br&gt;
&amp;quot;格式化c语言块
:map &amp;lt;leader&amp;gt;fmt &amp;lt;ESC&amp;gt;=a{
&lt;/br&gt;
nmap &amp;lt;c-e&amp;gt;i &amp;lt;esc&amp;gt;guiw
nmap &amp;lt;c-e&amp;gt;u &amp;lt;esc&amp;gt;gUiw
&lt;/br&gt;
nmap wv     &amp;lt;C-w&amp;gt;v     &amp;quot; 垂直分割当前窗口
nmap wc     &amp;lt;C-w&amp;gt;c     &amp;quot; 关闭当前窗口
nmap ws     &amp;lt;C-w&amp;gt;s     &amp;quot; 水平分割当前窗口
&lt;/br&gt;
&amp;quot;set listchars=tab:./ ,trail:.   &amp;quot; 将制表符显示为&amp;#39;.   &amp;#39;
&lt;/br&gt;
&amp;quot;范围折叠
noremap &amp;lt;c-x&amp;gt;z &amp;lt;esc&amp;gt;zf%
&lt;/br&gt;
&amp;quot; 用空格键来开关折叠
nmap &amp;lt;space&amp;gt; za
&lt;/br&gt;
&amp;quot;清除c-x对于数字的按键，为组合键让步
map &amp;lt;c-x&amp;gt; &amp;lt;ESC&amp;gt;
&lt;/br&gt;
&amp;quot;the mapping for the cmd-line
&amp;quot; start of line
:cnoremap &amp;lt;C-A&amp;gt; &amp;lt;Home&amp;gt;
&amp;quot; back one character
:cnoremap &amp;lt;C-B&amp;gt; &amp;lt;Left&amp;gt;
&amp;quot; delete character under cursor
:cnoremap &amp;lt;C-D&amp;gt; &amp;lt;Del&amp;gt;
&amp;quot; end of line
:cnoremap &amp;lt;C-E&amp;gt; &amp;lt;End&amp;gt;
&amp;quot; forward one character
:cnoremap &amp;lt;C-F&amp;gt; &amp;lt;Right&amp;gt;
&amp;quot; recall newer command-line
:cnoremap &amp;lt;C-N&amp;gt; &amp;lt;Down&amp;gt;
&amp;quot; recall previous (older) command-line
:cnoremap &amp;lt;C-P&amp;gt; &amp;lt;Up&amp;gt;
&amp;quot; back one word
:cnoremap &amp;lt;Esc&amp;gt;&amp;lt;C-B&amp;gt; &amp;lt;S-Left&amp;gt;
&amp;quot; forward one word
:cnoremap &amp;lt;Esc&amp;gt;&amp;lt;C-F&amp;gt; &amp;lt;S-Right&amp;gt;
cnoremap &amp;lt;C-j&amp;gt; &amp;lt;t&lt;em&gt;kd&amp;gt;
cnoremap &amp;lt;C-k&amp;gt; &amp;lt;t&lt;/em&gt;ku&amp;gt;
&lt;/br&gt;
&amp;quot;Treat long lines as break lines (useful when moving around in them)
&amp;quot;se swap之后，同物理行上线直接跳
map j gj
map k gk
&lt;/br&gt;
&amp;quot; Go to home and end using capitalized directions
noremap H ^
noremap L $l
&lt;/br&gt;
&amp;quot; select all
map &amp;lt;Leader&amp;gt;sa ggVG&amp;quot;
&lt;/br&gt;
&amp;quot; select block
nnoremap &amp;lt;leader&amp;gt;v V&lt;code&gt;}
&amp;lt;/br&amp;gt;
&amp;quot; w!! to sudo &amp;amp; write a file
cmap w!! w !sudo tee &amp;gt;/dev/null %
&amp;lt;/br&amp;gt;
&amp;quot; kj 替换 Esc
inoremap kj &amp;amp;lt;Esc&amp;gt;
&amp;lt;/br&amp;gt;
&amp;quot; 滚动Speed up scrolling of the viewport slightly
nnoremap &amp;amp;lt;C-e&amp;gt; 2&amp;amp;lt;C-e&amp;gt;
nnoremap &amp;amp;lt;C-y&amp;gt; 2&amp;amp;lt;C-y&amp;gt;
&amp;lt;/br&amp;gt;
&amp;quot;Jump to start and end of line using the home row keys
nmap t o&amp;amp;lt;ESC&amp;gt;k
nmap T O&amp;amp;lt;ESC&amp;gt;j
&amp;lt;/br&amp;gt;
&amp;quot; Swap implementations of&lt;/code&gt; and &amp;#39; jump to markers
&amp;quot; By default, &amp;#39; jumps to the marked line, &lt;code&gt;jumps to the marked line and
&amp;quot; column, so swap them
nnoremap &amp;#39;&lt;/code&gt;
nnoremap ` &amp;#39;
&lt;/br&gt;
&amp;quot; remap U to &amp;lt;C-r&amp;gt; for easier redo
nnoremap U &amp;lt;C-r&amp;gt;
&lt;/br&gt;
&amp;quot; Quickly edit/reload the vimrc file
nmap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;ev :e $MYVIMRC&amp;lt;CR&amp;gt;
nmap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;sv :so $MYVIMRC&amp;lt;CR&amp;gt;
&lt;/br&gt;
&amp;quot; 搜索相关
&amp;quot; 进入搜索Use sane regexes&amp;quot;
nnoremap / /\v
vnoremap / /\v
&lt;/br&gt;
&amp;quot; 去掉搜索高亮
noremap &amp;lt;silent&amp;gt;&amp;lt;leader&amp;gt;/ :nohls&amp;lt;CR&amp;gt;
&amp;quot;Keep search pattern at the center of the screen.&amp;quot;
nnoremap &amp;lt;silent&amp;gt; n nzz
nnoremap &amp;lt;silent&amp;gt; N Nzz
nnoremap &amp;lt;silent&amp;gt; * &lt;em&gt;zz
nnoremap &amp;lt;silent&amp;gt; # #zz
nnoremap &amp;lt;silent&amp;gt; g&lt;/em&gt; g*zz
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;
&lt;pre&gt;&lt;code&gt;
&amp;quot;==========================================
&amp;quot; Function Settings  自定义函数功能 function.vimrc
&amp;quot;==========================================
function! RunShell(Msg, Shell)
    echo a:Msg . &amp;#39;...&amp;#39;
    call system(a:Shell)
    echon &amp;#39;done&amp;#39;
endfunction
&lt;/br&gt;
function! ReName()
    let old&lt;em&gt;name = expand(&amp;quot;&amp;lt;cword&amp;gt;&amp;quot;)
    let old&lt;/em&gt;name = input(&amp;quot;old name:&amp;quot;,old&lt;em&gt;name)
    let new&lt;/em&gt;name = input(&amp;quot;new name:&amp;quot;,old&lt;em&gt;name)
    let exec = input(&amp;quot;are sure to refactor(y/n|Y/N):&amp;quot;)
    if &amp;#39;y&amp;#39; == exec || &amp;#39;Y&amp;#39; == exec
        let cmd = printf(&amp;quot;/opt/sys/settings/bin/vim/shell/ref.sh %s %s&amp;quot;,old&lt;/em&gt;name,new&lt;em&gt;name)
        echo cmd
        :call RunShell(&amp;quot;refactoring&amp;quot;,cmd)
    endif
endfunction
&lt;/br&gt;
let g:spx&lt;/em&gt;begin = 0
&lt;/br&gt;
function! GetCurrentCursor()
    let g:spx&lt;em&gt;begin = line(&amp;#39;.&amp;#39;)
    let g:spx&lt;/em&gt;begin = g:spx&lt;em&gt;begin + 0
    echo &amp;quot;get current line idx:&amp;quot;.g:spx&lt;/em&gt;begin
endfunction
&lt;/br&gt;
function! ClearCurrentCursor()
    let g:spx&lt;em&gt;begin = 0
    echo &amp;quot;clear current cursor is success&amp;quot;
endfunction
&lt;/br&gt;
function! CopyLinesToSystem()
    let begin&lt;/em&gt;idx = 0
    if 0 != g:spx&lt;em&gt;begin
        let begin&lt;/em&gt;idx = g:spx&lt;em&gt;begin
        let g:spx&lt;/em&gt;cpy&lt;em&gt;begin = 0
    else
        let begin&lt;/em&gt;idx = line(&amp;quot;.&amp;quot;)
        let begin&lt;em&gt;idx = input(&amp;quot;begin line idx:&amp;quot;,begin&lt;/em&gt;idx)
    endif
    let end&lt;em&gt;idx = line(&amp;quot;.&amp;quot;)
    let end&lt;/em&gt;idx = input(&amp;quot;end line idx:&amp;quot;,end&lt;em&gt;idx)
    let begin&lt;/em&gt;idx = begin&lt;em&gt;idx + 0
    let end&lt;/em&gt;idx = end&lt;em&gt;idx + 0
    if begin&lt;/em&gt;idx &amp;gt; end&lt;em&gt;idx
        let tmp = begin&lt;/em&gt;idx
        let begin&lt;em&gt;idx = end&lt;/em&gt;idx
        let end&lt;em&gt;idx = tmp
    endif
    let list = getline(begin&lt;/em&gt;idx,end&lt;em&gt;idx)
    let lines = join(list,&amp;quot;\n&amp;quot;)
    call setreg(&amp;quot;+&amp;quot;,lines)
    echo &amp;quot;copy lines to system begin:&amp;quot; . begin&lt;/em&gt;idx . &amp;quot; end:&amp;quot; . end&lt;em&gt;idx
endfunction
&lt;/br&gt;
function! DeleteLines()
    let begin&lt;/em&gt;idx = 0
    if 0 != g:spx&lt;em&gt;begin
        let begin&lt;/em&gt;idx = g:spx&lt;em&gt;begin
        let g:spx&lt;/em&gt;cpy&lt;em&gt;begin = 0
    else
        let begin&lt;/em&gt;idx = line(&amp;#39;.&amp;#39;)
        let begin&lt;em&gt;idx = input(&amp;quot;begin line idx:&amp;quot;,begin&lt;/em&gt;idx)
    endif
    let end&lt;em&gt;idx = line(&amp;#39;.&amp;#39;)
    let end&lt;/em&gt;idx = input(&amp;quot;end line idx:&amp;quot;,end&lt;em&gt;idx)
    let begin&lt;/em&gt;idx = begin&lt;em&gt;idx + 0
    let end&lt;/em&gt;idx = end&lt;em&gt;idx + 0
    if begin&lt;/em&gt;idx &amp;gt; end&lt;em&gt;idx
        let tmp = begin&lt;/em&gt;idx
        let begin&lt;em&gt;idx = end&lt;/em&gt;idx
        let end&lt;em&gt;idx = tmp
    endif
    let cur = getpos(&amp;#39;.&amp;#39;)
    let cur[1] = begin&lt;/em&gt;idx + 0
    let result = setpos(&amp;#39;.&amp;#39;,cur)
    if(0 != result)
        echo &amp;quot;delete lines begin:&amp;quot; . begin&lt;em&gt;idx . &amp;quot; end:&amp;quot; . end&lt;/em&gt;idx .&amp;quot; is fail&amp;quot;
        return
    endif
    let lines = abs(begin&lt;em&gt;idx - end&lt;/em&gt;idx) + 1 &amp;quot;add the line self
    &amp;quot;for fold
    execute &amp;quot;:&amp;quot;. begin&lt;em&gt;idx . &amp;quot;,&amp;quot; . end&lt;/em&gt;idx . &amp;quot;de&amp;quot;
    echo &amp;quot;delete lines begin:&amp;quot; . begin&lt;em&gt;idx . &amp;quot; end:&amp;quot; . end&lt;/em&gt;idx
endfunction
&lt;/br&gt;
noremap &amp;lt;leader&amp;gt;xg :call GetCurrentCursor()&amp;lt;cr&amp;gt;
noremap &amp;lt;leader&amp;gt;xc :cal ClearCurrentCursor()&amp;lt;cr&amp;gt;
noremap &amp;lt;leader&amp;gt;xy :call CopyLinesToSystem()&amp;lt;cr&amp;gt;
noremap &amp;lt;leader&amp;gt;xd :call DeleteLines()&amp;lt;cr&amp;gt;
noremap &amp;lt;leader&amp;gt;xr :call ReName()&amp;lt;cr&amp;gt;
&lt;/br&gt;
nmap &amp;lt;M-g&amp;gt; :call GetCurrentCursor()&amp;lt;cr&amp;gt;
nmap &amp;lt;M-c&amp;gt; :call ClearCurrentCursor()&amp;lt;cr&amp;gt;
nmap &amp;lt;M-y&amp;gt; :call CopyLinesToSystem()&amp;lt;cr&amp;gt;
nmap &amp;lt;M-d&amp;gt; :call DeleteLines()&amp;lt;cr&amp;gt;
nmap &amp;lt;M-r&amp;gt; :call ReName()&amp;lt;cr&amp;gt;
&lt;/br&gt;
&amp;quot;设定当前列高亮
function! SetColorColumn()
    let col&lt;em&gt;num = virtcol(&amp;quot;.&amp;quot;)
    let cc&lt;/em&gt;list = split(&amp;amp;cc, &amp;#39;,&amp;#39;)
    if count(cc&lt;em&gt;list, string(col&lt;/em&gt;num)) &amp;lt;= 0
        execute &amp;quot;set cc+=&amp;quot;.col&lt;em&gt;num
    else
        execute &amp;quot;set cc-=&amp;quot;.col&lt;/em&gt;num
    endif
endfunction
map &amp;lt;leader&amp;gt;ch :call SetColorColumn()&amp;lt;CR&amp;gt;
&lt;/br&gt;
&amp;quot; 定义函数AutoSetFileHead，自动插入文件头
autocmd BufNewFile &lt;em&gt;.sh,&lt;/em&gt;.py,*.md exec &amp;quot;:call AutoSetFileHead()&amp;quot;
function! AutoSetFileHead()
    &amp;quot;如果文件类型为.sh文件
    if &amp;amp;filetype == &amp;#39;sh&amp;#39;
        call setline(1, &amp;quot;#!/bin/bash&amp;quot;)
    endif&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;quot;如果文件类型为python
if &amp;amp;filetype == &amp;#39;python&amp;#39;
    call setline(1, &amp;quot;\#!/usr/bin/env python&amp;quot;)
    call append(1, &amp;quot;\# encoding: utf-8&amp;quot;)
endif
if &amp;amp;filetype == &amp;#39;mkd&amp;#39; || &amp;amp;filetype == &amp;#39;md&amp;#39;
    call setline(&amp;#39;.&amp;#39;,&amp;quot;---&amp;quot;)
    normal ==o
    call setline(&amp;#39;.&amp;#39;,&amp;quot;layout: post&amp;quot;)
    normal ==o
    call setline(&amp;#39;.&amp;#39;,&amp;quot;categories: []&amp;quot;)
    normal ==o
    call setline(&amp;#39;.&amp;#39;,&amp;quot;title: \&amp;quot; \&amp;quot;&amp;quot;)
    normal ==o
    call setline(&amp;#39;.&amp;#39;,&amp;quot;tags: []&amp;quot;)
    normal ==o
    call setline(&amp;#39;.&amp;#39;,&amp;quot;---&amp;quot;)
    normal ==o
endif

normal G
normal o
normal o
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;endfunc
&lt;/br&gt;
&amp;quot; 保存文件时删除多余空格
&amp;quot; Delete trailing white space on save, useful for Python and CoffeeScript ;)
func! DeleteTrailingWS()
  exe &amp;quot;normal mz&amp;quot;
  %s/\s+$//ge
  exe &amp;quot;normal `z&amp;quot;
endfunc
autocmd BufWrite &lt;em&gt;.py :call DeleteTrailingWS()
autocmd BufWrite *.c :call DeleteTrailingWS()
autocmd BufWrite *.h :call DeleteTrailingWS()
autocmd BufWrite *.vimrc :call DeleteTrailingWS()
&lt;/br&gt;
&amp;quot; 相对行号      行号变成相对，可以用 nj  nk   进行跳转 5j   5k 上下跳5行
set relativenumber number
au FocusLost * :set norelativenumber number
au FocusGained * :set relativenumber
&amp;quot; 插入模式下用绝对行号, 普通模式下用相对
autocmd InsertEnter * :set norelativenumber number
autocmd InsertLeave * :set relativenumber
function! NumberToggle()
  if(&amp;amp;relativenumber == 1)
    set norelativenumber number
  else
    set relativenumber
  endif
endfunc
nnoremap &amp;lt;C-t&amp;gt; :call NumberToggle()&amp;lt;cr&amp;gt;
&lt;/br&gt;
function InsertHeadDef(firstLine, lastLine)
    if a:firstLine &amp;lt;1 || a:lastLine&amp;gt; line(&amp;#39;$&amp;#39;)
        echoerr &amp;#39;InsertHeadDef : Range overflow !(FirstLine:&amp;#39;.a:firstLine.&amp;#39;;LastLine:&amp;#39;.a:lastLine.&amp;#39;;ValidRange:1~&amp;#39;.line(&amp;#39;$&amp;#39;).&amp;#39;)&amp;#39;
        return &amp;#39;&amp;#39;
    endif
    let sourcefilename=expand(&amp;quot;%:t&amp;quot;)
    let definename=substitute(sourcefilename,&amp;#39; &amp;#39;,&amp;#39;&amp;#39;,&amp;#39;g&amp;#39;)
    let definename=substitute(definename,&amp;#39;.&amp;#39;,&amp;#39;&lt;em&gt;&amp;#39;,&amp;#39;g&amp;#39;)
    let definename = toupper(definename)
    exe &amp;#39;normal &amp;#39;.a:firstLine.&amp;#39;GO&amp;#39;
    call setline(&amp;#39;.&amp;#39;, &amp;#39;#ifndef _&amp;#39;.definename.&amp;quot;&lt;/em&gt;&amp;quot;)
    normal ==o
    call setline(&amp;#39;.&amp;#39;, &amp;#39;#define &lt;em&gt;&amp;#39;.definename.&amp;quot;&lt;/em&gt;&amp;quot;)
    normal ==o
    call setline(&amp;#39;.&amp;#39;, &amp;#39;#ifdef _&lt;em&gt;cplusplus&amp;#39;)
    normal ==o
    call setline(&amp;#39;.&amp;#39;, &amp;#39;extern &amp;quot;C&amp;quot; {&amp;#39;)
    normal ==o
    call setline(&amp;#39;.&amp;#39;, &amp;#39;#endif&amp;#39;)
    normal ==o
    exe &amp;#39;normal ==&amp;#39;.(a:lastLine-a:firstLine+1).&amp;#39;jo&amp;#39;
    call setline(&amp;#39;.&amp;#39;, &amp;#39;#ifdef _&lt;/em&gt;cplusplus&amp;#39;)
    normal ==o
    call setline(&amp;#39;.&amp;#39;, &amp;#39;}&amp;#39;)
    normal ==o
    call setline(&amp;#39;.&amp;#39;, &amp;#39;#endif&amp;#39;)
    normal ==o
    call setline(&amp;#39;.&amp;#39;, &amp;#39;#endif&amp;#39;)
    let goLn = a:firstLine+2
    exe &amp;#39;normal ==&amp;#39;.goLn.&amp;#39;G&amp;#39;
endfunction
function InsertHeadDefN()
    let firstLine = 1
    let lastLine = line(&amp;#39;$&amp;#39;)
    let n=1
    while n &amp;lt; 20
        let line = getline(n)
        if n==1
            if line =~ &amp;#39;^\/\&lt;/em&gt;.&lt;em&gt;$&amp;#39;
                let n = n + 1
                continue
            else
                break
            endif
        endif
        if line =~ &amp;#39;^.&lt;/em&gt;*\/$&amp;#39;
            let firstLine = n+1
            break
        endif
        let n = n + 1
    endwhile
    call InsertHeadDef(firstLine, lastLine)
endfunction
nmap ha :call InsertHeadDefN()&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>系统配置</title>
   <link href="http://www.94geek.com/2014/08/29/system.html"/>
   <updated>2014-08-29T00:00:00+08:00</updated>
   <id>/2014/08/29/system</id>
   <content type="html">&lt;h4&gt;摘要&lt;/h4&gt;

&lt;p&gt;多年来，具体来说5年了，我一直使用ub+awesome的工作环境。在过程中，被公司的同事
笑成为&amp;quot;生活在CUI&amp;quot;中的另类。我选中ub是因为方便，apt-get实在让我无法自拔，并且ub
对于desktop的支持也是很多别的linux发行版无法比拟的。cos等等都比较适合部署在
server环境上。选中awesome，是因为喜欢它简洁的界面，瓦片式的管理也让屏幕的任何
一部分都不会被浪费。再加上我本身就喜欢CUI，所以awesome就成了首选。这些年来，积
累了一些配置文件，个人觉得还算用着顺手，这里就拿出来分享一下。&lt;br&gt;
&lt;img src=&quot;/img/sys/awesome.jpg&quot; alt=&quot;awesome&quot;&gt;
&lt;/br&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
&lt;li&gt;声音。&lt;br&gt;
ub的root默认是不开的，我又不喜欢使用sudo，就是不喜欢那种隔一层纱的感觉，所以虽
然自知linux不推荐开启root，但是我还是喜欢使用root的直接。所以一般我第一件事情
就是把root开启。开启的root的命令是：
&lt;code&gt;
sudo pwsswd root
&lt;/code&gt;
然后输入你的root密码，这样就算是打开了，但是还不能登陆。还需要更改登陆配置。找
到/etc/gdm/gdm.conf，然后把AllowRoot改为true。&lt;br&gt;
如果你的root账户还不能登陆，你还需要去&amp;quot;系统-&amp;gt;系统管理-&amp;gt;登陆窗口&amp;quot;中的安全页中把
&amp;quot;允许本地系统管理员登陆&amp;quot;选项打开。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;声音。&lt;br&gt;
root登陆后，你会发现声音没了。对我这种上班就带上耳机的人来说这是相当不能接受的
。所以你也要把声音打开。找到pulseaudio文件，然后把文件内的两个选项改成以下这样：
&lt;code&gt;
PULSEAUDIO_SYSTEM_START=1
DISALLOW_MODULE_LOADING=0
&lt;/code&gt;
重启，就会有声音了。但是还有一个问题就是不知道为什么，有的时候启动的时候也是没
有声音，但是重启一下就正常了，分析了一下日志也没发现有什么问题，如果你知道，请
你告诉我。&lt;br&gt;&lt;/li&gt;
&lt;li&gt;chrome在root下无法启动。&lt;br&gt;
ub的root环境下，chrome无法启动，所以必须得给它加一个脚本，自定义user-data-dir
参数，就可以了。&lt;br&gt;
&lt;code&gt;
# /bin/bash
google-chrome \-\-user-data-dir=/root/.config/google-chrome &amp;amp;
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;awesome&lt;br&gt;
安装awesome&lt;br&gt;
&lt;code&gt;
apt-get install awesome
&lt;/code&gt;
awesome在/etc/下有一个文件夹是有它的配置文件的，awesome的配置文件使用lua写的，
个人的配置文件如下：&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-lua&quot; data-lang=&quot;lua&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-- Standard awesome library&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;awful&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;awful.autofocus&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;awful.rules&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- Theme handling library&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;beautiful&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- Notification library&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;naughty&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- Load Debian menu entries&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;debian.menu&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- Themes define colours, icons, and wallpapers&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;beautiful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/usr/share/awesome/themes/default/theme.lua&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- This is used later as the default terminal and editor to run.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;terminal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;x-terminal-emulator&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;os.getenv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;EDITOR&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;editor&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;editor_cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terminal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; -e &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;editor&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- Default modkey.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- Usually, Mod4 is the key with a logo between Control and Alt.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- If you do not like this or do not have such a key,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- I suggest you to remap Mod4 to another key using xmodmap or other tools.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- However, you can use another modifier like Mod1, but it may interact with others.&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Mod4&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;--modkey = &amp;quot;alt&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- Table of layouts to cover with awful.layout.inc, order matters.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;layouts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;horizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spiral&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spiral&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dwindle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fullscreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;magnifier&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- Define a tag table which hold all screen tags.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- Each screen has its own tag table.&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- Create a laucher widget and a main menu&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;myawesomemenu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;manual&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terminal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; -e man awesome&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;edit config&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;editor_cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;config&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/rc.lua&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;restart&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awesome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;restart&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;quit&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awesome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;mymainmenu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;awesome&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myawesomemenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beautiful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;awesome_icon&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Linux&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;debian&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Debian_menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Debian&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;shell&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terminal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mylauncher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;launcher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beautiful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;awesome_icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mymainmenu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- Create a textclock widget&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mytextclock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textclock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;align&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;right&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- Create a systray&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mysystray&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;systray&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- Create a wibox for each screen and add it&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mywibox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mypromptbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mylayoutbox&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mytaglist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mytaglist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewonly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movetotag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewtoggle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toggletag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewnext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewprev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mytasklist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mytasklist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isvisible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewonly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- Create a promptbox for each screen&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mypromptbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prompt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;horizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;leftright&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- Create an imagebox widget which will contains an icon indicating which layout we&amp;#39;re using.&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- We need one layoutbox per screen.&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mylayoutbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layoutbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mylayoutbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- Create a taglist widget&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mytaglist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;taglist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;taglist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mytaglist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- Create a tasklist widget&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mytasklist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tasklist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tasklist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;currenttags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mytasklist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- Create the wibox&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mywibox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wibox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;top&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- Add widgets to the wibox - order matters&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;mywibox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widgets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;mylauncher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;mytaglist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;mypromptbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;horizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;leftright&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;mylayoutbox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;mytextclock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysystray&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;mytasklist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;horizontal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rightleft&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttons&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mymainmenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toggle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewnext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewprev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;globalkeys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Left&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewprev&lt;/span&gt;       &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Right&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewnext&lt;/span&gt;       &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Escape&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;restore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;j&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;k&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mymainmenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- Layout manipulation&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Shift&amp;quot;&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;j&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Shift&amp;quot;&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;k&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;,&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus_relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus_relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jumpto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Tab&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;history&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;previous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- Standard program&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Return&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;terminal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;XF86AudioRaiseVolume&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;amixer set Master 3+&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;XF86AudioLowerVolume&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;amixer set Master 3-&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;--define by myself&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;--              awful.key({ modkey,           }, &amp;quot;F11&amp;quot;, function () awful.util.spawn(&amp;quot;dmenu_run&amp;quot;) end),&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;--awful.key({ modkey,           }, &amp;quot;v&amp;quot;, function () awful.util.spawn(&amp;quot;gnome-volume-control-applet&amp;quot;) end),&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;--awful.key({ modkey,&amp;quot;Control&amp;quot;  }, &amp;quot;n&amp;quot;, function () awful.util.spawn(&amp;quot;nm-applet&amp;quot;) end),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;xlock&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Control&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awesome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Shift&amp;quot;&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;q&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awesome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;l&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;incmwfact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;h&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;incmwfact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Shift&amp;quot;&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;h&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;incnmaster&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Shift&amp;quot;&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;l&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;incnmaster&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Control&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;h&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;incncol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Control&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;l&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;incncol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;space&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Shift&amp;quot;&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;space&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layouts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- Prompt&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;            &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;dmenu_run&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;clientkeys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;f&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fullscreen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fullscreen&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;c&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                         &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Control&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;space&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toggle&lt;/span&gt;                     &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Control&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Return&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getmaster&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;o&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movetoscreen&lt;/span&gt;                        &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Shift&amp;quot;&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;redraw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;                       &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minimized&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minimized&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;m&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maximized_horizontal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maximized_horizontal&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maximized_vertical&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maximized_vertical&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- Compute the maximum number of digit we need, limited to 9&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;keynumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keynumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;math.min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;math.max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keynumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- Bind all key numbers to tags.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- Be careful: we use keycodes to make it works on any keyboard layout.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- This should map on the top row of your keyboard, usually 1 to 9.&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keynumber&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;globalkeys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;globalkeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mouse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewonly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Control&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mouse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;viewtoggle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Control&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;       &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;movetotag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Control&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Shift&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;#&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toggletag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;clientbuttons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mouse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modkey&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mouse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;-- Set keys&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;globalkeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rules&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- All clients will match this rule.&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;border_width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beautiful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;border_width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;border_color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beautiful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;border_normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clientkeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;buttons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clientbuttons&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;MPlayer&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;floating&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pinentry&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;floating&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rule&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;gimp&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;floating&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- Set Firefox to always map on tags number 2 of screen 1.&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- { rule = { class = &amp;quot;Firefox&amp;quot; },&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;--   properties = { tag = tags[1][2] } },&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;-- Signal function to execute when a new client appears.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_signal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;manage&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- Add a titlebar&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- awful.titlebar.add(c, { modkey = modkey })&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;-- Enable sloppy focus&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_signal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;mouse::enter&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;suit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;magnifier&lt;/span&gt;
                &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;focus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;startup&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;-- Set the windows at the slave,&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;-- i.e. put it at the end of others instead of setting it master.&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;-- awful.client.setslave(c)&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;-- Put windows in a smart way, only if they does not set an initial position.&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size_hints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_position&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size_hints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;program_position&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;placement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;no_overlap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;placement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;no_offscreen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_signal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;focus&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;border_color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beautiful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;border_focus&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_signal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;unfocus&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;border_color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beautiful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;border_normal&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spawn_with_shell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;nm-applet&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spawn_with_shell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;gnome-sound-applet&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;--sine ubuntu 12.04.02&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;--awful.util.spawn_with_shell(&amp;quot;gnome-volume-control-applet&amp;quot;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;--            awful.util.spawn_with_shell(&amp;quot;xautolock -time 10 -locker &amp;#39;xlock -lockdelay 10&amp;#39;&amp;quot;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;--                awful.util.run_once(&amp;quot;xautolock -time 1 -locker &amp;#39;xlock -lockdelay 1&amp;#39;&amp;quot;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run_once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;findme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;firstspace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstspace&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;findme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstspace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;awful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spawn_with_shell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pgrep -u $USER -x &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;findme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &amp;gt; /dev/null || (&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;run_once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;xautolock -time 30 -locker &amp;#39;xlock -lockdelay 30&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;/br&gt;
在使用awesome的过程中，需要dmenu加以配合，这样你的CUI才能真正的用起来，算起来
。&lt;br&gt;
5. 关机&lt;br&gt;
关机需要xlockmore和xautolock两个软件进行配合，使用apt-get就可以。&lt;br&gt;
xlockmore是锁屏和关机的，xautolock是自动启动屏保啥的。&lt;br&gt;
然后在增加一个shutdown的bash文件，你就可以使用这个文件来关机或者休眠了。  &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#! /bin/sh&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;ACTION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;zenity --width&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;90&lt;/span&gt; --height&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;200&lt;/span&gt; --list --radiolist --text&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Select logout action&amp;quot;&lt;/span&gt; --title&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Logout&amp;quot;&lt;/span&gt; --column &lt;span class=&quot;s2&quot;&gt;&amp;quot;Choice&amp;quot;&lt;/span&gt; --column &lt;span class=&quot;s2&quot;&gt;&amp;quot;Action&amp;quot;&lt;/span&gt; TRUE Shutdown FALSE Reboot FALSE LockScreen FALSE Suspend&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&amp;quot;${ACTION}&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ACTION&lt;/span&gt; in
  Shutdown&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    shutdown -h now
    &lt;span class=&quot;c&quot;&gt;## or via ConsoleKit&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# dbus-send --system --dest=org.freedesktop.ConsoleKit.Manager &lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.Stop&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  Reboot&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    reboot
    &lt;span class=&quot;c&quot;&gt;## Or via ConsoleKit&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# dbus-send --system --dest=org.freedesktop.ConsoleKit.Manager &lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.Restart&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  Suspend&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#gksudo pm-suspend&lt;/span&gt;
    dbus-send --system --print-reply --dest&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;org.freedesktop.Hal 
    /org/freedesktop/Hal/devices/computer 
    org.freedesktop.Hal.Device.SystemPowerManagement.Suspend int32:0
    &lt;span class=&quot;c&quot;&gt;# HAL is deprecated in newer systems in favor of UPower etc.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# dbus-send --system --dest=org.freedesktop.UPower /org/freedesktop/UPower org.freedesktop.UPower.Suspend&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  LockScreen&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    slock
    &lt;span class=&quot;c&quot;&gt;# Or gnome-screensaver-command -l&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;小红点&lt;br&gt;
因为一直使用Thinkpad的笔记本，但是ub对于小红点的支持貌似不是太好，刚刚开始的几
个ub的版本好像还不支持小红点，所以就使用一个第三方的软件来加以支持，这个软件叫
gpointing-device-settings,安装以后还是相当好用的，但是你还需要加一个配置文件。
当然，后来的ub好像已经开始支持小红点了，具体忘了，很久没用Thinkpad了。&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#! /bin/sh&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#close touch&lt;/span&gt;
synclient &lt;span class=&quot;nv&quot;&gt;TouchpadOff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&amp;lt;/br&amp;gt;
&lt;span class=&quot;c&quot;&gt;#开启小红帽+中键&lt;/span&gt;
xinput &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-int-prop &lt;span class=&quot;s2&quot;&gt;&amp;quot;TPPS/2 IBM TrackPoint&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Evdev Wheel Emulation&amp;quot;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; 1
xinput &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-int-prop &lt;span class=&quot;s2&quot;&gt;&amp;quot;TPPS/2 IBM TrackPoint&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Evdev Wheel Emulation Button&amp;quot;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; 2
xinput &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-int-prop &lt;span class=&quot;s2&quot;&gt;&amp;quot;TPPS/2 IBM TrackPoint&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Evdev Wheel Emulation Y Axis&amp;quot;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; 5
xinput &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;-int-prop &lt;span class=&quot;s2&quot;&gt;&amp;quot;TPPS/2 IBM TrackPoint&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Evdev Wheel Emulation X Axis&amp;quot;&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; 7&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;CUI中文件夹的颜色&lt;br&gt;
当你使用CUI的时候，使用ls列出来的文件和文件夹都是一样的颜色，你也不能很好的辨
认出来，所以，你增加一个dircolors文件，并且做一个软连接到这个文件就可以：&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-properties&quot; data-lang=&quot;properties&quot;&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Configuration file for dircolors, a utility to help you set the&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# LS_COLORS environment variable used by GNU ls with the --color option.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Copyright (C) 1996, 1999-2011 Free Software Foundation, Inc.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Copying and distribution of this file, with or without modification,&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# are permitted provided the copyright notice and this notice are preserved.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# The keywords COLOR, OPTIONS, and EIGHTBIT (honored by the&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# slackware version of dircolors) are recognized but ignored.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Below, there should be one TERM entry for each termtype that is colorizable&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Eterm&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;ansi&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;color-xterm&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;con132x25&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;con132x30&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;con132x43&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;con132x60&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;con80x25&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;con80x28&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;con80x30&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;con80x43&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;con80x50&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;con80x60&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;cons25&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;console&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;cygwin&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;dtterm&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;eterm-color&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;gnome&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;gnome-256color&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;jfbterm&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;konsole&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;kterm&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;linux&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;linux-c&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;mach-color&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;mlterm&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;putty&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;rxvt&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;rxvt-256color&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;rxvt-cygwin&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;rxvt-cygwin-native&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;rxvt-unicode&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;rxvt-unicode-256color&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;rxvt-unicode256&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;screen&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;screen-256color&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;screen-256color-bce&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;screen-bce&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;screen-w&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;screen.Eterm&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;screen.rxvt&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;screen.linux&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;terminator&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;vt100&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;xterm&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;xterm-16color&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;xterm-256color&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;xterm-88color&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;xterm-color&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;TERM&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;xterm-debian&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Below are the color init strings for the basic file types. A color init&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;\# string consists of one or more of the following numeric codes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;\# Attribute codes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;\# 00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;none 01=bold 04=underscore 05=blink 07=reverse 08=concealed&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;\# Text color codes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;\# 30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;black 31=red 32=green 33=yellow 34=blue 35=magenta 36=cyan 37=white&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;\# Background color codes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;\# 40&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;black 41=red 42=green 43=yellow 44=blue 45=magenta 46=cyan 47=white&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#NORMAL 00 # no color code at all&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;\#FILE 00 # regular file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;use no color at all&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;RESET&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# reset to &amp;quot;normal&amp;quot; color&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;DIR&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;34 # directory&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;LINK&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36 # symbolic link. (If you set this to &amp;#39;target&amp;#39; instead of a&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# numerical value, the color is as for the file pointed to.)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;MULTIHARDLINK&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# regular file with more than one link&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;FIFO&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;33 # pipe&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;SOCK&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35 # socket&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;DOOR&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35 # door&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;BLK&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;33;01 # block device driver&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;CHR&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;33;01 # character device driver&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;ORPHAN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31;01 # symlink to nonexistent file, or non-stat&amp;#39;able file&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;SETUID&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;37&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;41 # file that is setuid (u+s)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;SETGID&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;43 # file that is setgid (g+s)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;CAPABILITY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;41 # file with capability&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;STICKY_OTHER_WRITABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;34 # dir that is sticky and other-writable (+t,o+w)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;OTHER_WRITABLE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;34 # dir that is other-writable (o+w) and not sticky&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;STICKY&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;34 # dir with the sticky bit set (+t) and not other-writable&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;\# This is for files with execute permission&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;EXEC&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;32&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# List any file extensions like &amp;#39;.gz&amp;#39; or &amp;#39;.tar&amp;#39; that you would like ls&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# to colorize below. Put the extension, a space, and the color init string.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# (and any comments you want to add after a &amp;#39;#&amp;#39;)&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;\# If you use DOS-style suffixes, you may want to uncomment the following&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#.cmd 01;32 # executables (bright green)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#.exe 01;32&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#.com 01;32&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#.btm 01;32&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#.bat 01;32&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Or if you want to colorize scripts even if they do not have the&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# executable bit actually set.&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#.sh 01;32&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#.csh 01;32&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# archives or compressed (bright red)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.tar&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.tgz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.arj&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.taz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.lzh&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.lzma&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.tlz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.txz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.zip&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.z&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.Z&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.dz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.gz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.lz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.xz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.bz2&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.bz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.tbz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.tbz2&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.tz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.deb&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.rpm&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.jar&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.war&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.ear&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.sar&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.rar&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.ace&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.zoo&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.cpio&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.7z&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.rz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;31&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# image formats&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.jpg&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.jpeg&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.gif&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.bmp&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.pbm&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.pgm&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.ppm&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.tga&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.xbm&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.xpm&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.tif&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.tiff&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.png&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.svg&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.svgz&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.mng&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.pcx&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.mov&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.mpg&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.mpeg&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.m2v&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.mkv&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.webm&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.ogm&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.mp4&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.m4v&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.mp4v&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.vob&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.qt&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.nuv&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.wmv&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.asf&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.rm&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.rmvb&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.flc&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.avi&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.fli&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.flv&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.gl&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.dl&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.xcf&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.xwd&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.yuv&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.cgm&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.emf&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;\# http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;//wiki.xiph.org/index.php/MIME_Types_and_File_Extensions&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.axv&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.anx&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.ogv&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.ogx&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;35&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# audio formats&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.aac&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.au&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.flac&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.mid&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.midi&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.mka&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.mp3&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.mpc&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.ogg&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.ra&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.wav&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;\# http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;//wiki.xiph.org/index.php/MIME_Types_and_File_Extensions&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.axa&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.oga&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.spx&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;.xspf&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;;36&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;外接投影仪或者显示器
外接显示器或者投影器，你必须使用xrand来支持。开机的时候awesome好像默认会检测你
的屏幕数量然后加以显示。如果没有自动，那么你只需要运行一下一下的代码就可以了。&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;/usr/bin/env bash
&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; in
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;-c&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 打开外接显示器(--auto:最高分辨率)，与笔记本液晶屏幕显示同样内容（克隆）&lt;/span&gt;
        xrandr --output VGA1 --same-as LVDS1 --auto
        &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;-cs&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 打开外接显示器(分辨率为1280x1024)，与笔记本液晶屏幕显示同样内容（克隆）&lt;/span&gt;
        xrandr --output VGA1 --same-as LVDS1 --mode 1280x1024
        &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;-el&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 打开外接显示器(--auto:最高分辨率)，设置为右侧扩展屏幕&lt;/span&gt;
        xrandr --output VGA1 --left-of LVDS1 --auto 
        &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;-er&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 打开外接显示器(--auto:最高分辨率)，设置为右侧扩展屏幕&lt;/span&gt;
        xrandr --output VGA1 --right-of LVDS1 --auto
        &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;-f&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 关闭外接显示器&lt;/span&gt;
        xrandr --output VGA1 --off
        &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;-oe&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 打开外接显示器，同时关闭笔记本液晶屏幕（只用外接显示器工作）&lt;/span&gt;
        xrandr --output VGA1 --auto --output LVDS1 --off
        &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;-oo&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 关闭外接显示器，同时打开笔记本液晶屏幕 （只用笔记本液晶屏）&lt;/span&gt;
        xrandr --output VGA1 --off --output LVDS1 --auto
        &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-c: 打开外接显示器(--auto:最高分辨率)，与笔记本液晶屏幕显示同样内容（克隆）&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-cs: 打开外接显示器(分辨率为1280x1024)，与笔记本液晶屏幕显示同样内容（克隆）&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-er: 打开外接显示器(--auto:最高分辨率)，设置为右侧扩展屏幕&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-el: 打开外接显示器(--auto:最高分辨率)，设置为left侧扩展屏幕&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-f: 关闭外接显示器&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-oe: 打开外接显示器，同时关闭笔记本液晶屏幕（只用外接显示器工作）&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-oo: 关闭外接显示器，同时打开笔记本液晶屏幕 （只用笔记本液晶屏）&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;如果使用awesome，modkey+ctrl+j,modkey+ctrl+k,切换不同的screen&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;

    &lt;span class=&quot;s2&quot;&gt;&amp;quot;-h&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-c: 打开外接显示器(--auto:最高分辨率)，与笔记本液晶屏幕显示同样内容（克隆）&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-cs: 打开外接显示器(分辨率为1280x1024)，与笔记本液晶屏幕显示同样内容（克隆）&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-e: 打开外接显示器(--auto:最高分辨率)，设置为右侧扩展屏幕&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-f: 关闭外接显示器&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-oe: 打开外接显示器，同时关闭笔记本液晶屏幕（只用外接显示器工作）&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;-oo: 关闭外接显示器，同时打开笔记本液晶屏幕 （只用笔记本液晶屏）&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;如果使用awesome，modkey+ctrl+j,modkey+ctrl+k,切换不同的screen&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;

&lt;h4&gt;结束语&lt;/h4&gt;

&lt;p&gt;这些配置文件都是可以直接拿来用的，我已经经过了测试。保证可以使用。&lt;br&gt;
因为现在也不太用ub+awesome了，改用了mac，但是说实话，mac没有ub+awesome好用和自
如。如果还能选择，我想还是ub+awesome来的更适合我一些。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>albianj架构和设计的一些想法</title>
   <link href="http://www.94geek.com/2014/08/28/thought-of-albianj.html"/>
   <updated>2014-08-28T00:00:00+08:00</updated>
   <id>/2014/08/28/thought-of-albianj</id>
   <content type="html">&lt;h4&gt;albianj是什么？&lt;/h4&gt;

&lt;p&gt;其实albianj是一套框架，它主要就是解决互联网公司经常碰到的对于大量数据和高并发
情况下，数据库压力无法解决的问题。它主要由IOC+ORM组成，但是和spring和hbm不一样
，albianj没有那么重，相比简直就是非常轻。albianj就是解决实际问题出现的，并不是
由论文或者假象情况实现。&lt;br&gt;
albianj严格执行它自己的代码，尽最大的努力完成它内部的各部分工作。&lt;br&gt;
&lt;img src=&quot;/img/albianj/zz.gif&quot; alt=&quot;albianj&quot;&gt;&lt;/p&gt;

&lt;h4&gt;albianj的出现&lt;/h4&gt;

&lt;p&gt;大概是在11年，那个时候我在ctrip，在7月份的时候有个前同事和我创业的事情。当时是
做奢侈品电子商务，然后他们缺一个技术负责人，想加上我一起。然后我们见了一下面，
聊了一下关于技术的那部分事情，后来回家后，秉承有备无患的原则，我开始了albianj
的开发工作，其实albianj是albian的java版本，它还有一个c#版本，但是因为原来的公
司已经有框架的原因，c#版本的没有怎么使用，但是java版本倒是在今年的公司内使用了
，主要用在了日志存储这一块上。&lt;br&gt;
需要说明的是，我并不是在重复的造轮子。我知道，并且大家也都知道，在java程序
中你可以说什么都缺，但是唯独开源框架那是肯定不会缺的，在java世界中，框架级的程
序如果你有心排列一下，足以排满整个黄浦江了。那为什么还要写albianj呢？因为我不
想交那么多的复杂税。&lt;br&gt;
举个例子：spring中，更加论文描述，DI的方式有几种？据我已经退化的记忆力，好像是
三种：继承、参数和还有一种忘记了。但是你真正在程序中经常使用的（注意，是经常使
用的）有几种？99.9999%的人只会使用一种。如果你的程序用了2种或者以上，那么你的
维护者看见你的程序就会骂娘。相信我，这是真的。  &lt;/p&gt;

&lt;!-- more --&gt;

&lt;h4&gt;我们碰到的实际问题&lt;/h4&gt;

&lt;p&gt;首先，我们得假设一下：有一个电子商务网站，每天的pv大概在1kw以上，交易额在2kw以
上，有百万甚至千万级用户，有几百台甚至1k台以上的服务器。那么这种情况下，我们会
得到哪些信息？&lt;br&gt;
1. 压力巨大!不管是web服务器还是db服务器，压力都很大，对不对？&lt;br&gt;
2. 单机模式肯定是搞不定了，必须要使用分布式的架构了。&lt;br&gt;
3. 如果搞分布式，怎么解决数据的一致性问题？怎么解决跨库跨表的事务问题？&lt;br&gt;
4. 机器很多，好像管理这些机器就是一个很大问题？更不要说如果程序出了问
题，假设某个单子除了问题，查找这个问题，查找现场也是一个很大的挑战。&lt;br&gt;
5. 要维护这个网站，技术人员肯定要100人以上，怎么解决这些人在技术上能步调一致？&lt;br&gt;
6. 比步调一致更难解决的是，对于开发人员来说，怎么解决分布式架构的透明问题？&lt;br&gt;
......&lt;br&gt;
其实还有很多很多的问题需要解决，我们不迷信一个框架或者一个技术就能解决那些问题
，但是至少我们可以期望，一个框架或者一种技术可以缓解这些问题造成的麻烦。
PS：不要怀疑上面对于网站的假设，其实很多网站都差不多这个级别，比如5173，京东，
等等，我相信上面碰到的问题，他们都已经碰到了。5173肯定碰到了，因为我待过。  &lt;/p&gt;

&lt;h4&gt;albianj提供的解决办法和思路&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先得解决压力大的问题。压力大在网站上表现为2种：web和db。  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;web相对来说还是好解决的。一把只要机器足够，基本上就没问题。如果你们公司有钱，
那么可以买F5来做负载均衡；如果是创业公司或者穷逼公司或者是技术巨牛，那么可以使
用LVS来解决负载均衡。但是从程序的架构上来说，不是一个负载均衡就能解决所有问题
的，一个典型的问题就是：怎么解决数据唯一性问题？比如说你有一个物品可以卖，但是
不巧它只有最后一件了，这个时候有n（n&amp;gt;=2)个人同时来买这个物品，因为你有多台web
服务器，所以这n个人不是被分配到一台web上的，这个时候你怎么办？一般的做法就是引
入一个分布式锁功能，比如zk，它就可以完成这个功能。可以让一个物品在同一时刻，整
个站点内只有一个人可以去操作，那么是谁最后买到呢？这就是比谁手快。还有人说，我
准备放到DB层去解决，我对DB层做一个事务锁定，然后就可以了。这样不是不可以，并且
做了分布式锁之后对于DB不是就不用事务锁了，而是你这样会对DB产生很多的无效压力操
作，导致DB无效的操作过多，在本身就已经捉襟见肘的DB压力上还要加把盐。&lt;br&gt;
&lt;/br&gt;
web相对于db还是好解决的。真正考验的地方是DB。这其实病不是我们的错，而是对于
RDB来说，它从娘胎里出来就自带了单点的特性。具体可以去查一下CAP原则。要不然现阶
段NOSQL怎么会那么火？其实NOSQL不应该被叫做NOSQL，更确切的，叫做NORDB跟合适。对
于DB来说，卸载压力的方式也是唯一方式就是缓存。那么解决大数据的方式也是唯一的方
式就是&amp;quot;分&amp;quot;,一般叫做分库分表。但是分库分表就会导致一个问题，数据完整性怎么解决
？这也是DBA听到你说要分库分表的时候，第一个要问你的问题。当然，具体怎么分，这
个得看你的业务具体决定，但是你得知道有这种方法，并且能提供一个一致的方法来解决
这个问题，albianj就使用了多阶段提交来完成解决这个问题。多阶段提交，其实就是每
个库都会有自己的事务在albianj中称之为task，然后整个DB操作就是一个job，对于一个
job来说，它可以有多个task构成。这样只有当每个task被db接受后，整个job才算成功，
中间只要有一个task不成功，那么整个job就不成功，所有的task全部被回滚。注意这部
分对于程序员来说都是透明的，程序员和往常一样只要调用albianj的save方法就可以保
存数据了，唯一需要程序要要做的就是写一个callback，以在job失效的时候处理数据的
完整性.  &lt;/p&gt;
&lt;/blockquote&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;事务的完整性有了保证后，我们开始解决大数据造成的DB压力问题。对于海量数据来
说，我们没有什么更好的办法来解决它说带来的压力。毕竟那部分数据是我们必须要存储
的，所以在手段上我们显得有点捉襟见肘。但是一般来说，分摊压力最主要的就是要&amp;quot;分
&amp;quot;，不管你怎么样，当单一的数据库或者单一的表不能解决问题的时候，你唯一的选择就
是把他们分开。分开的方式有很多。教科书上一般说是有2中：水平和垂直。但是偶只推
荐水平切分。垂直切分不是不行，但是你想想，在数量一定的情况下，也就是说PK数量一
定的情况下，速度会快吗？所以，水平切分，把当个库或者单个表的数量变小，这样才能
根本上去解决这个问题。水平切分的方法有很多，比如按照时间，按照物品的属性等等。
这些都可以，唯一的要求就是根据你的实际业务出发，看怎么切分方便那就怎么来。对于
albianj来说，它当然不能提供给你一个分库分表的完整功能，但是它在它的ORM中集成了
该功能，在albianj中叫数据路由。具体的路由方法由开发者提供，albianj只负责更加开
发者提供的路由算法来操作数据库。并且这部分对于开发人员来说是半透明的，开发者提
供的只是一个AlbianObject，必须实现IAlabianObject接口，或者继承FreeAlbianObject
（吐血推荐），然后完成你的HashMapping，并且在配置文件中配置一下你的HashMapping
，使它在job context中生效，这样就完成了最头疼的分库分表功能。AlbianObject不仅
仅支持分库分表，还支持读写分离、单一对象多备份存储等等功能，并且同时还解决了单
一对象多存储的版本问题。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最棘手的2个问题解决了，下面我们来解决机器过多问题。当程序复杂并且部署在大量
机器上的时候，如果其中的一个单子出了问题，维护人员要去找到这个单子的现场，那就
像实在大海中捞针一样了--完全凭运气。但是我们还是有办法来解决这个问题的。
albianj采取的做法是&amp;quot;业务化每个操作&amp;quot;,看上去很高深。其实说白了就是业务化自定义主
键。每一个操作，最后对应到数据库中都是一条记录。那么如果我们某个操作发生了问题
，我们当然可以知道它的ID，然后更加ID可以追溯到这个操作实在那台机器上发生的，发
生的时间，发生的业务站点，等等。albianj有一个唯一性ID生成器，只要开发真调用这
个ID生成器来生成ID，并且把数据库中的主键设置成这个ID就能解决在大海中捞针的问题
。并且因为ID带有业务属性，所以仅仅依靠这个ID就能解决一大半的数据路由问题。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下来要解决的是机器问题。上面说到了ID具有业务的属性，并且能知道案发现场，那
么要做到这个功能，必须要把机器的ID附带到唯一性的ID上。所以我们给albianj的所有
的机器都一个全站唯一性的kernelID，这个ID唯一标识了该机器或者该进程在整个abianj
中的位置。管理这个kernelID的机器在abianj中被称之为albianj-mgr，在albianj启动的
时候，会去mgr机器上去验证一下该kernelid是否已经被使用，如果已经被使用，将不允
许该albianj实例启动，这样就能确保kernelID在整个albianj系统中的唯一，也能保证每
个ID在整站中的唯一。  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后要解决的问题就是对于开发者来说怎么让albianj符合KISS原则。在整个albianj
设计和开发时候，我一直在做减法。最明显的是把DI的方式从3种减到1种，对于ORM，只
要一个简单的table-object的mapping，不再增加任何额外的功能，比如导致n+1问题的
lazy-load等等。这些问题在互联网开发中其实并不实用，就算我妥协加入了，最后也会
是为了性能考虑把这个功能禁止掉。所以这个局面的情况下还不如直接砍掉。对于一个大
型的软件架构，要保证一致性，唯一的办法就是少做。最好是什么都不做，0对任何人来
说都是0，但是如果是1，那么对于n个人来说就会有n个1的意义，A认为他是一个人，B认
为他是一条路，这样直接导致每个人对于作者要表达的意思各有见解。如果是2甚至是3，
那就是n个数量级的问题了。所以在架构上，你当然不能什么都不做，你唯一要做的是，
一件事情永远只有一条路能做到，最多为了便利性或者某些妥协变成2条路，但是永远不
能秉承&amp;quot;条条道路通罗马&amp;quot;的原则，否则到后面，你就会失控。  &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;albianj以后要做的事情&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;个人觉得zk的性能不怎么样，所以可能会增加一个分布式锁的服务；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;必须增加一个mgr服务，这样albianj就真正能在分布式环境下使用；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;可能需要对于AlbianObject增加一个版本控制；&lt;br&gt;&lt;/li&gt;
&lt;li&gt;增加一个配置服务，这是一个7*24应用必须具备的；&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Albianj使用手册</title>
   <link href="http://www.94geek.com/2014/08/25/manual-for-albianj.html"/>
   <updated>2014-08-25T00:00:00+08:00</updated>
   <id>/2014/08/25/manual-for-albianj</id>
   <content type="html">&lt;h1&gt;albianj&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;albianj是一个自带“超轻量级”IoC和数据路由功能ORM的互联网系统开发框架。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Albianj使用手册&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/img/manual/manual.jpeg&quot; alt=&quot;manual&quot;&gt;&lt;/p&gt;

&lt;h2&gt;总述：&lt;/h2&gt;

&lt;p&gt;Albianj是一个一站式的开发框架解决方案。Albianj由java写成（其实他还有一个net版
本的）。目前因为项目的需要，Albianj还无法担负起一站式分布式系统开发框架的重任
，但是只要花少许的功能更改和增加就可以实现。具体如下:&lt;/p&gt;

&lt;p&gt;1：增加一个分布式锁服务，让对象状态全站点唯一；&lt;br&gt;
2：增加一个管理服务器，管理Albianj的状态;&lt;/p&gt;

&lt;p&gt;Albianj是一款为互联网企业量身定做的开发框架。它主要解决了互联网企业中经常会碰到但是难以解决的在大数据高并发的前提下，对于数据的一致性和数据的完整性的问题。作为一个框架系统，Albianj还附带了一个简单的IoC框架，用来管理Albianj处理数据的service。&lt;/p&gt;

&lt;h2&gt;主要功能:&lt;/h2&gt;

&lt;p&gt;1：ID生成器。根据Albianj的配置，生成全站的唯一性的id，这些id带上基本上的属性，
主要的信息有:&lt;strong&gt;id所属的业务；生成id的所属机器；id的生成时间&lt;/strong&gt;等等.&lt;br&gt;
2：数据路由。俗称分库分表。这些原本繁杂的代码由Albianj给你代劳。当使用Albianj
保存数据和访问数据的时候，数据会根据你的配置，找到他的路由，&lt;strong&gt;路由算法因为牵涉到
业务，所以必须由你提供&lt;/strong&gt;，然后由Albianj引擎在内部调用。&lt;br&gt;
3：两段提交的事务。在启用数据路由之后，紧接着遇到的问题就是数据的完整性和一致
性问题。在Albianj中是使用&lt;strong&gt;&amp;quot;伪事务&amp;quot;&lt;/strong&gt;的方式解决的，其实就是两段提交。&lt;br&gt;
    &lt;strong&gt;警告：在数据完整性上，因为分布式的原因，会有一定的数据不一致和数据不完整
    的几率出现。这是CAP造成的，如果想了解请自行google。&lt;/strong&gt;&lt;br&gt;
4：IoC。因为data router和orm需要加载很多的service，所以Albianj自带了一个超轻量
级的IoC，但是在合格IoC绝对够用了；&lt;br&gt;
5：logger。Albianj集成了目前java中比较流行的log4j，不要和我说log4j老,性能不行
，够用就可以了；&lt;br&gt;
6：线程池。Albianj内置了一个线程池，用来解决Albianj的异步启动和数据的缓存问题
。&lt;br&gt;
7：xml解析器。Albianj用dom4j扩展了一个xml的解析器，用来解析Albianj的各个配置文
件；&lt;br&gt;
8：Stack信息。Albianj扩展了对于异常捕获时的stack信息。&lt;br&gt;
9：加密。因为数据库连接的需要，加入了DEC加密算法，
&lt;strong&gt;请各位在使用Albianj时自行更改DEC的加密key&lt;/strong&gt;；Albianj不仅仅只提供DEC对称加密
，还集成了MD5，SHA等等加密算法；&lt;br&gt;
10：密码生成器。Albianj自带了一个密码生成器，主要为了解决数据库用户名和密码的
安全问题；&lt;br&gt;
11：id解析器，分析生成的Id的业务信息，便于数据路由;&lt;br&gt;
12： 新增了通过http或者https统一配置文件的功能，但是由于kernnel.config文件中含
有在分布式模式下必须唯一的配置标识，故kernel.config必须单独存放在当前的Albianj
实例宿主目录下；(2012-07-17新增)&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2&gt;使用方法（目前版本为单机或者说非分布式版本）：&lt;/h2&gt;

&lt;p&gt;首先需要确保在站点的根目录下有config文件夹，在文件夹中有以下几个配置文件：&lt;/p&gt;

&lt;p&gt;-kernel.properties：Albianj引擎内核的配置；&lt;br&gt;
-log4j.xml：Albianj集成日志主键的配置;&lt;br&gt;
-service.xml：各种service的配置，Albianj的超轻量级的IoC；&lt;br&gt;
-storage.xml：数据库连接的配置；&lt;br&gt;
-peristence.xml：持久化对象的配置；&lt;br&gt;
-routing.xml：持久化对象对于存储数据库的数据路由；&lt;/p&gt;

&lt;h2&gt;kernel.properties&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;albianj引擎内核配置文件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;id＝0001&lt;/h3&gt;

&lt;p&gt;id是Albianj引擎的唯一标识，如果Albianj开启分布式模式，这个id就是这个Albianj实
例在整个系统中的唯一标识，&lt;strong&gt;此标识必须唯一&lt;/strong&gt;，不能有冲突，所以当分布式架构时，需要
一个管理器就是去校验这个id是否冲突;&lt;br&gt;
&lt;strong&gt;Albianj最多支持10000台机器，也就是说这个
id的范围使用0到9999.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;AppName＝Info&lt;/h3&gt;

&lt;p&gt;此配置是业务配置，表明这个Albianj实例所被使用的业务站点名称。&lt;br&gt;
&lt;strong&gt;此配置最长不能超过7位，如果超过7位，将会截取前7位使用；&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;ThreadPoolCoreSize＝5&lt;/h3&gt;

&lt;h3&gt;ThreadPoolMaxSize＝20&lt;/h3&gt;

&lt;p&gt;Albianj内置线程池的数量，根据CPU的情况配置，一般是cpu核数的n倍；&lt;/p&gt;

&lt;h3&gt;Level＝Debug&lt;/h3&gt;

&lt;p&gt;此配置决定了这个站点是运行在online还是offline环境，一般，online环境配置为
Release，offline环境配置为Debug。&lt;br&gt;
&lt;em&gt;当这个配置项为Debug时，对于整个的Albianj没有任何的影响；当这个配置项为Release
时，storage.xml中的对于数据库的用户名和密码配置项将会启用安全模式，即加密模式
，需要加密串请使用命令行工具Albianj.ConnectionBuildeer生成。&lt;/em&gt;&lt;br&gt;
**
警告：注意，加密会使用kernnel中的DEC加密算法，线上环境请更改加密的key和slot，
并且保证key和slot的安全性；另：key和slot是代码中写死的，不会根据根据配置，因为
不安全；** &lt;/p&gt;

&lt;h3&gt;StartupMode＝Normal&lt;/h3&gt;

&lt;p&gt;此配置决定Albianj引擎在站点中启动的方式。Albianj的启动方式有两种：Normal和Async。当配置为Normal时，即顺序启动；当配置为Async时，即为异步启动，就是Albianj的service都有Albianj的IoC通过异步的方式启动，一般适用于需要多处理的Web站点启动；&lt;/p&gt;

&lt;h2&gt;log4j.xml&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;albianj日志主键配置信息&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;此配置文件基本等同于log4.xml的常规配置，只是为了更好的检查日志，Albianj对于
log4j的RollingFileAppender进行了扩展，详细如下：&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt;
&amp;lt;!-- log4j的配置信息，基本不需要更改 --&amp;gt;
&amp;lt;!DOCTYPE log4j:configuration SYSTEM &amp;quot;log4j.dtd&amp;quot;&amp;gt;
&amp;lt;log4j:configuration xmlns:log4j=&amp;quot;http://jakarta.apache.org/log4j/&amp;quot;&amp;gt;

&amp;lt;!-- %c 输出日志信息所属的类的全名 %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd 
    HH:mm:ss }，输出类似：2002-10-18- 22：10：28 %f 输出日志信息所属的类的类名 %l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行 
    %m 输出代码中指定的信息，如log(message)中的message %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n” 
    %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推 %r 输出自应用启动到输出该日志信息所耗费的毫秒数 
    %t 输出产生该日志事件的线程名 --&amp;gt;
&amp;lt;appender name=&amp;quot;STDOUT&amp;quot; class=&amp;quot;org.apache.log4j.ConsoleAppender&amp;quot;&amp;gt;
    &amp;lt;layout class=&amp;quot;org.apache.log4j.PatternLayout&amp;quot;&amp;gt;
        &amp;lt;param name=&amp;quot;ConversionPattern&amp;quot; value=&amp;quot;[%d{yyyy-MM-dd HH:mm:ss}] %p %m%n&amp;quot; /&amp;gt;
    &amp;lt;/layout&amp;gt;
&amp;lt;/appender&amp;gt;

&amp;lt;appender name=&amp;quot;RollingFileAppender&amp;quot; class=&amp;quot;org.albianj.logger.AlbianRollingFileAppender&amp;quot;&amp;gt;
    &amp;lt;param name=&amp;quot;File&amp;quot; value=&amp;quot;logs/&amp;quot; /&amp;gt;&amp;lt;!-- 设置日志输出文件名 --&amp;gt;
    &amp;lt;!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 --&amp;gt;
    &amp;lt;param name=&amp;quot;Append&amp;quot; value=&amp;quot;false&amp;quot; /&amp;gt;
    &amp;lt;param name=&amp;quot;MaxBackupIndex&amp;quot; value=&amp;quot;-1&amp;quot; /&amp;gt;
    &amp;lt;param name=&amp;quot;MaxFileSize&amp;quot; value=&amp;quot;10240&amp;quot; /&amp;gt;
    &amp;lt;param name=&amp;quot;FileName&amp;quot; value=&amp;quot;albianj&amp;quot; /&amp;gt;
    &amp;lt;param name=&amp;quot;Format&amp;quot; value=&amp;quot;yyyyMMddHHmmss&amp;quot; /&amp;gt;
    &amp;lt;param name=&amp;quot;Suffix&amp;quot; value=&amp;quot;log&amp;quot; /&amp;gt;
    &amp;lt;layout class=&amp;quot;org.apache.log4j.PatternLayout&amp;quot;&amp;gt;
        &amp;lt;param name=&amp;quot;ConversionPattern&amp;quot; value=&amp;quot;[%d{yyyy-MM-dd HH:mm:ss}] %p %m%n&amp;quot; /&amp;gt;
    &amp;lt;/layout&amp;gt;
&amp;lt;/appender&amp;gt;


&amp;lt;!--默认级别，需要输出哪种类型日志，就写哪种类型 --&amp;gt;
&amp;lt;root&amp;gt;
    &amp;lt;level value=&amp;quot;DEBUG&amp;quot; /&amp;gt;
    &amp;lt;appender-ref ref=&amp;quot;RollingFileAppender&amp;quot; /&amp;gt;
    &amp;lt;appender-ref ref=&amp;quot;STDOUT&amp;quot; /&amp;gt;
&amp;lt;/root&amp;gt;
&amp;lt;/log4j:configuration&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更改RollingFileAppender定位&lt;br&gt;
将RollingFileAppender节点定向到
org.albianj.logger.AlbianRollingFileAppender即可&lt;br&gt;
&lt;em&gt;其实你更简单的做法是c-c上面的xml配置代码，将name为File的param节点的value改成你自
己的日志目录即可.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;service.xml&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;albianj超轻量级的IoC服务&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;需要通过Albianj超轻量级IoC加载的服务必须满足以下条件：&lt;br&gt;
1：有接口和实现；&lt;br&gt;
2：接口必须继承org.albianj.service.IAlbianService, 如无特殊情况（99%的情况）实现类直接继承FreeAlbianService抽象类就可以了，如果在service加载个卸载的过程中有一些资源等操作，请重载各方法。&lt;/p&gt;

&lt;p&gt;service.xml的配置如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt;
&amp;lt;Service Id=&amp;quot;UserService&amp;quot; Type=&amp;quot;albianj.explame.service.imp.UserService&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;id：&lt;/h3&gt;

&lt;p&gt;service在Albianj的IoC中的唯一性ID这个Id在一个Albianj实例内&lt;strong&gt;必须唯一&lt;/strong&gt;不能冲突；&lt;/p&gt;

&lt;h3&gt;Type：&lt;/h3&gt;

&lt;p&gt;service的实现类，Albianj的IoC会根据这个类去初始化你的service；&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注意：在
service.xml
中，可以不考虑service之间的依赖关系来配置，Albianj会自动去解决service之间的先
后问题，但是Albianj目前不支持在加载过程中两两service之间存在相互引用；&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;内置services：&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;以下service是Albianj引擎内置而且需要的service：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt;
&amp;lt;Service Id=&amp;quot;logger&amp;quot; Type=&amp;quot;org.albianj.logger.AlbianLoggerService&amp;quot; /&amp;gt;
&amp;lt;Service Id=&amp;quot;Kernel&amp;quot; Type=&amp;quot;org.albianj.service.parser.KernelServiceParser&amp;quot; /&amp;gt;
&amp;lt;Service Id=&amp;quot;StorageService&amp;quot;
    Type=&amp;quot;org.albianj.persistence.impl.storage.StorageService&amp;quot; /&amp;gt;
&amp;lt;Service Id=&amp;quot;RoutingService&amp;quot;
    Type=&amp;quot;org.albianj.persistence.impl.routing.RoutingService&amp;quot; /&amp;gt;
&amp;lt;Service Id=&amp;quot;PersistenceService&amp;quot;
    Type=&amp;quot;org.albianj.persistence.impl.persistence.PersistenceService&amp;quot; /&amp;gt;
&amp;lt;Service Id=&amp;quot;ThreadPoolService&amp;quot; Type=&amp;quot;org.albianj.concurrent.ThreadPoolService&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;一般情况下，这6个service不需要更改，除非你自己重新实现了其中的一些service&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;storage.xml&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;albianj数据库连接配置&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;storage.xml的详细配置如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt;
&amp;lt;Storages&amp;gt;
&amp;lt;Storage&amp;gt;
    &amp;lt;Name&amp;gt;UserDB&amp;lt;/Name&amp;gt;
    &amp;lt;DatabaseStyle&amp;gt;MySql&amp;lt;/DatabaseStyle&amp;gt;
    &amp;lt;Server&amp;gt;10.96.210.58&amp;lt;/Server&amp;gt;
    &amp;lt;Database&amp;gt;AlbianjUserDB&amp;lt;/Database&amp;gt;
    &amp;lt;User&amp;gt;remote&amp;lt;/User&amp;gt;
    &amp;lt;Password&amp;gt;db2202&amp;lt;/Password&amp;gt;
    &amp;lt;Pooling&amp;gt;true&amp;lt;/Pooling&amp;gt;
    &amp;lt;MinPoolSize&amp;gt;10&amp;lt;/MinPoolSize&amp;gt;
    &amp;lt;MaxPoolSize&amp;gt;20&amp;lt;/MaxPoolSize&amp;gt;
    &amp;lt;Timeout&amp;gt;60&amp;lt;/Timeout&amp;gt;
    &amp;lt;Charset&amp;gt;utf8&amp;lt;/Charset&amp;gt;
    &amp;lt;Transactional&amp;gt;true&amp;lt;/Transactional&amp;gt;
&amp;lt;/Storage&amp;gt;
&amp;lt;/Storages&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;name：&lt;/h3&gt;

&lt;p&gt;这个数据库信息的唯一标识.&lt;br&gt;
&lt;em&gt;注：这个标识会在routing.xml文件中被用到；&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;DatabaseStyle：&lt;/h3&gt;

&lt;p&gt;你所使用的数据库，比如mysql，oracle等等，目前Albianj只支持mysql，你可以通过实现接口的方式来实现别的数据库的连接，目前此配置项只支持MySql；&lt;/p&gt;

&lt;h3&gt;server：&lt;/h3&gt;

&lt;p&gt;数据库的IP地址；&lt;/p&gt;

&lt;h3&gt;Database：&lt;/h3&gt;

&lt;p&gt;数据库的名称；&lt;/p&gt;

&lt;h3&gt;User：&lt;/h3&gt;

&lt;p&gt;连接数据库的用户名.&lt;br&gt;
&lt;em&gt;注意：当kernnel中Level配置为Release时，User需要加密；&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Password：&lt;/h3&gt;

&lt;p&gt;连接数据库的用户名，&lt;br&gt;
&lt;em&gt;注意：同user节点，当kernnel中Level配置为Release时，User需要加密；&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Pooling：&lt;/h3&gt;

&lt;p&gt;是否启用数据库连接池.
&lt;em&gt;注意：连接次会使用lazyload方式，所以第一次打开数据库相对会较慢；&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;MinPoolSize：&lt;/h3&gt;

&lt;p&gt;数据库连接池的最小连接数，在打开数据库连接池时有效；&lt;/p&gt;

&lt;h3&gt;MaxPoolSize：&lt;/h3&gt;

&lt;p&gt;数据库连接池的最大连接数，在打开数据库连接池时有效；&lt;/p&gt;

&lt;h3&gt;Timeout：&lt;/h3&gt;

&lt;p&gt;连接超时时间；&lt;/p&gt;

&lt;h3&gt;Charset：&lt;/h3&gt;

&lt;p&gt;数据库的编码，一般MySql数据库的话，使用utf8&lt;/p&gt;

&lt;h3&gt;Transactional：&lt;/h3&gt;

&lt;p&gt;数据库引擎是否支持事务；&lt;br&gt;
&lt;em&gt;注意：如果需要albianj支持分布式事务，这里的配置一定要是true；&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;TransactionLevel:&lt;/h3&gt;

&lt;p&gt;数据库引擎的事务级别，默认的设置为数据库的当前设置，该选项只有在Transactional
为true的前提下才会有作用，该项取值为：  &lt;/p&gt;

&lt;h4&gt;READ_UNCOMMITTED&lt;/h4&gt;

&lt;h4&gt;READ_COMMITTED&lt;/h4&gt;

&lt;h4&gt;REPEATABLE_READ&lt;/h4&gt;

&lt;h4&gt;SERIALIZABLE&lt;/h4&gt;

&lt;h2&gt;persistence.xml&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;albianj持久化数据对象配置文件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;此文件配置所有需要持久化的数据类。和service一样，需要Albianj支持的数据对象必须
满足以下条件：&lt;br&gt;
1：必须有接口和实现类；&lt;br&gt;
2：接口必须继承IAlbianObject，实现必须实现IAlbianObject，一般情况下（99%适用）
继承FreeAlbianObject即可；&lt;br&gt;
3：如果不是自己实现存储机制，请千万不要对数据对象的IsAlbianNew属性进行操作（即
调用setsetIsAlbianNew方法）；&lt;/p&gt;

&lt;p&gt;AlbianObject的配置如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt;
&amp;lt;AlbianObjects&amp;gt;
    &amp;lt;AlbianObject Type=&amp;quot;albianj.explame.obj.imp.ReaderInfoLog&amp;quot;&amp;gt;
        &amp;lt;Cache Enable=&amp;quot;false&amp;quot; LifeTime=&amp;quot;300&amp;quot;&amp;gt;&amp;lt;/Cache&amp;gt;
        &amp;lt;!-- 删除了缓存服务。所以这部分配置一直为false，等待开启了缓存服务，再更加实际情况配置 --&amp;gt;
        &amp;lt;Members&amp;gt; &amp;lt;!-- 所有对象的属性映射，如果使用默认，可以不需要配置 --&amp;gt;
            &amp;lt;Member Name=&amp;quot;uid&amp;quot; AllowNull=&amp;quot;false&amp;quot;&amp;gt;&amp;lt;/Member&amp;gt;
            &amp;lt;Member Name=&amp;quot;result&amp;quot; AllowNull=&amp;quot;false&amp;quot;&amp;gt;&amp;lt;/Member&amp;gt;
            &amp;lt;Member Name=&amp;quot;channel&amp;quot; AllowNull=&amp;quot;false&amp;quot;&amp;gt;&amp;lt;/Member&amp;gt;
            &amp;lt;Member Name=&amp;quot;notes&amp;quot; FieldName=&amp;quot;Notes&amp;quot; Length=&amp;quot;1024&amp;quot; /&amp;gt;
            &amp;lt;Member Name=&amp;quot;createtime&amp;quot; AllowNull=&amp;quot;false&amp;quot; /&amp;gt;
            &amp;lt;Member Name=&amp;quot;actor&amp;quot; FieldName=&amp;quot;Actor&amp;quot; AllowNull=&amp;quot;false&amp;quot;
                Length=&amp;quot;20&amp;quot; /&amp;gt;
            &amp;lt;Member Name=&amp;quot;actionip&amp;quot; FieldName=&amp;quot;Actionip&amp;quot; AllowNull=&amp;quot;false&amp;quot;
                Length=&amp;quot;50&amp;quot; /&amp;gt;
        &amp;lt;/Members&amp;gt;
    &amp;lt;/AlbianObject&amp;gt;
&amp;lt;/AlbianObjects&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;每个AlbianObject即一个数据对象。AlbianObjects支持多AlbianObject配置。&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Type：&lt;/h2&gt;

&lt;p&gt;数据对象类，必须实现IAlbianObject；&lt;/p&gt;

&lt;h2&gt;cache&lt;/h2&gt;

&lt;p&gt;数据对象缓存信息&lt;/p&gt;

&lt;h3&gt;Enable：&lt;/h3&gt;

&lt;p&gt;是否启用缓存，目前因为项目的特殊性，不支持缓存，这部分可以通过开发接口支持；&lt;/p&gt;

&lt;h3&gt;LifeTime：&lt;/h3&gt;

&lt;p&gt;缓存过期时间，在开启缓存的情况下有效；&lt;/p&gt;

&lt;h2&gt;Members：&lt;/h2&gt;

&lt;p&gt;数据对象类的属性集合，
&lt;em&gt;注：如果全部使用默认，这部分可以为空；&lt;/em&gt;&lt;br&gt;
Member 数据项，每个数据项都有以下几项功能提供；&lt;/p&gt;

&lt;h3&gt;Name：&lt;/h3&gt;

&lt;p&gt;数据项在程序中的名称，一般为属性名称；&lt;/p&gt;

&lt;h3&gt;FieldName：&lt;/h3&gt;

&lt;p&gt;属性对应的在数据库中的字段名称；&lt;/p&gt;

&lt;h3&gt;AllowNull：&lt;/h3&gt;

&lt;p&gt;是否允许字段为空，配置值为：true或者false&lt;/p&gt;

&lt;h3&gt;Length：&lt;/h3&gt;

&lt;p&gt;字段的最长长度；&lt;/p&gt;

&lt;h3&gt;PrimaryKey：&lt;/h3&gt;

&lt;p&gt;是否为主键，配置值为true或者false；&lt;/p&gt;

&lt;h3&gt;IsSave：&lt;/h3&gt;

&lt;p&gt;字段是否保存到数据库，配置为true或者false；&lt;/p&gt;

&lt;h3&gt;DatabaseType：&lt;/h3&gt;

&lt;p&gt;字段在数据库中的类型，目前支持的数据类型为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;DatabaseType                数据库类型
char                        Types.CHAR
varchar                     Types.VARCHAR
longvarchar                 Types.LONGVARCHAR
numeric                     Types.NUMERIC
decimal                     Types.DECIMAL
bit                         Types.BIT
tinyint                     Types.TINYINT
smallint                    Types.SMALLINT
integer                     Types.INTEGER
bigint                      Types.BIGINT
real                        Types.REAL
float                       Types.FLOAT
double                      Types.DOUBLE
binary                      Types.BINARY
varbinary                   Types.VARBINARY
longvarbinary               Types.LONGVARBINARY
date                        Types.DATE
time                        Types.TIME
timestamp                   Types.TIMESTAMP
clob                        Types.CLOB
blob                        Types.BLOB
array                       Types.ARRAY
以上都不是                 Types.VARCHAR
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;注：默认为字段类型通过转换成的类型，如果转换找不到类型，即为varchar。如果你配置了DatabaseType，并且配置值不在Albianj支持的行列，默认也为varcahr.这样其实会影响数据库性能，所以推荐强类型。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;属性默认类型转换如下：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;属性类型                    数据库类型
String                      Types.VARCHAR
BigDecimal                  Types.NUMERIC
boolean                     Types.BIT
integer                     Types.INTEGER
long                        Types.BIGINT
float                       Types.FLOAT
double                      Types.DOUBLE
date                        Types.DATE
time                        Types.TIME
timestamp                   Types.TIMESTAMP
clob                        Types.CLOB
blob                        Types.BLOB
array                       Types.ARRAY
以上都不是                 Types.VARCHAR
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;routing.xml&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;albianj数据路由配置文件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;此文件配置数据路由信息，数据对象的数据路由必须实现IAlbianObjectHashMapping接口或者继承FreeAlbianObjectHashMapping抽象类。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39;?&amp;gt;
&amp;lt;AlbianObjects&amp;gt;
    &amp;lt;AlbianObject Type=&amp;quot;albianj.explame.obj.imp.User&amp;quot;
        HashMapping=&amp;quot;albianj.explame.service.imp.UserRouter&amp;quot;&amp;gt;
        &amp;lt;WriterRoutings Hash=&amp;quot;true&amp;quot;&amp;gt;
            &amp;lt;WriterRouting Name=&amp;quot;Hash&amp;quot; StorageName=&amp;quot;UserDB&amp;quot;
                TableName=&amp;quot;User&amp;quot; Enable=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/WriterRouting&amp;gt;
            &amp;lt;WriterRouting Name=&amp;quot;HashID&amp;quot; StorageName=&amp;quot;User&amp;quot;
                TableName=&amp;quot;User&amp;quot; Enable=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/WriterRouting&amp;gt;
        &amp;lt;/WriterRoutings&amp;gt;
        &amp;lt;ReaderRoutings Hash=&amp;quot;true&amp;quot;&amp;gt;
            &amp;lt;ReaderRouting Name=&amp;quot;Hash&amp;quot; StorageName=&amp;quot;UserDB&amp;quot;
                TableName=&amp;quot;User&amp;quot; Enable=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/ReaderRouting&amp;gt;
            &amp;lt;ReaderRouting Name=&amp;quot;HashID&amp;quot; StorageName=&amp;quot;User&amp;quot;
                TableName=&amp;quot;User&amp;quot; Enable=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/ReaderRouting&amp;gt;
        &amp;lt;/ReaderRoutings&amp;gt;
    &amp;lt;/AlbianObject&amp;gt;
&amp;lt;/AlbianObjects&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;注：每个AlbianObject即一个数据对象。AlbianObjects支持多AlbianObject配置。&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Type：&lt;/h2&gt;

&lt;p&gt;数据对象类，必须实现IAlbianObject，其实就是persistence.xml中AlbianObject配置中的Type；&lt;/p&gt;

&lt;h2&gt;HashMapping：&lt;/h2&gt;

&lt;p&gt;对于这个Type数据对象的数据路由类，这个类必须实现IAlbianObjectHashMapping接口或者继承FreeAlbianObjectHashMapping抽象类。&lt;/p&gt;

&lt;h2&gt;WriterRoutings：&lt;/h2&gt;

&lt;p&gt;写数据时使用的数据路由，可以支持多个路由，配合HashMapping中的数据路由方法，可以将数据同时保存到一个或者多个路由中，这个保存数据的路由最终有HashMapping中方法提供。&lt;/p&gt;

&lt;h3&gt;WriterRouting：&lt;/h3&gt;

&lt;p&gt;数据对象的一个数据路由。&lt;/p&gt;

&lt;h4&gt;Name：&lt;/h4&gt;

&lt;p&gt;这个路由的名称；&lt;/p&gt;

&lt;h4&gt;StorageName：&lt;/h4&gt;

&lt;p&gt;数据路由到的数据库；&lt;/p&gt;

&lt;h4&gt;TableName：&lt;/h4&gt;

&lt;p&gt;数据路由的基表名称，这个名称可能会被HashMapping中的mappingWriterTable更改；&lt;/p&gt;

&lt;h4&gt;Enable：&lt;/h4&gt;

&lt;p&gt;是否开启这个路由，配置为true或者false，如果配置为false，即关闭这条路由。&lt;/p&gt;

&lt;p&gt;** ReaderRoutings和ReaderRouting等同于WriterRoutings和WriterRouting，只是一个负
责写入的数据路由，一个负责读取的数据路由。**&lt;/p&gt;

&lt;p&gt;配置完routing.xml后，你必须实现HashMapping中的4个方法，具体为：&lt;br&gt;
-mappingWriterRouting&lt;br&gt;
-mappingWriterTable&lt;br&gt;
-mappingReaderRouting&lt;br&gt;
-mappingReaderTable&lt;/p&gt;

&lt;p&gt;mappingWriterRouting方法就是负责构建你需要将数据路由到那些路由（其实就是需要将数据保存到那些数据库），这个方法的返回值是一个List，也就是说对于保存数据而言，支持多路由（即保存到多个数据库）。&lt;br&gt;
mappingWriterTable方法负责构建你对于每个数据路由的具体的表。你在路由你的数据库后对于表也许也有一定的路由规则，这里就是定义的表的数据路由，说白了其实就是需要将数据库保存到哪些表。&lt;/p&gt;

&lt;p&gt;mappingReaderRouting、mappingReaderTable正好和appingWriterRouting、mappingWriterTable相反，它们是负责读取的，因为读取的时候你只可能在一个最适合的数据路由中读取数据，所以mappingReaderRouting的返回值是一个IRoutingAttribute值（单个路由信息，因为最适合的只可能有且只有一个，唯一的），mappingReaderTable和mappingWriterTable一致，没有差别。&lt;/p&gt;

&lt;h2&gt;启动Albianj引擎&lt;/h2&gt;

&lt;p&gt;配置完所有的配置后，我们启动Albianj引擎，只要一句代码。在你的站点启动事件中，加入以下代码即可。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    try {
    // 首先，你必须在应用程序启动时第一位启动albianj
    // 每个进程启动一次即可
        AlbianBootService.start();
    } catch (Exception e) {
        // TODO Auto-generated catch block
        System.err.println(&amp;quot;start albianj kernel is fail.&amp;quot;);
        e.printStackTrace();
    } finally {
        // 大规模使用时必须卸载albianj，
        // 卸载时albianj会通知配置服务器卸载相关服务
        try {
            AlbianBootService.unload();
        } catch (Exception e) {
            System.err.println(&amp;quot;ubload albianj kernel is fail.&amp;quot;);
            e.printStackTrace();
        }
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>blog近期的计划</title>
   <link href="http://www.94geek.com/2014/08/24/plan-for-blog.html"/>
   <updated>2014-08-24T00:00:00+08:00</updated>
   <id>/2014/08/24/plan-for-blog</id>
   <content type="html">&lt;h4&gt;计划&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/plan/plan.jpg&quot; alt=&quot;plan&quot;&gt;
&lt;/br&gt;
1. 近期在使用libev，顺便翻译了libev的使用文档，准备公开出来（给libev的作者发了
mail，希望得到许可，但是石沉大海。等不及了，先公开再说吧！);&lt;br&gt;
2. 最近在写YDB，其实就是一个分布式文件系统，里面有一些关于libev的实践和一些技
巧，这部分也可以在近期公开;&lt;br&gt;
3. 4月份的时候，我重新检验了albianj，并且增加了一些功能，albianj目前已经在公司
上线，源码因为是我自己的，并且在没进入公司之前就已经写成，所以已经签入github，
这部分也可以公开，.net版本的因为工作关系问题，目前还未公开;&lt;br&gt;
4. 最近帮一个朋友搞一个632项目。作为帮忙一起搞的，我也可以把这部分的工作公开;  &lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;/br&gt;
目前这些应该已经差不多了吧，至少已经足够写上一阵子了。&lt;/p&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;

&lt;h4&gt;关于blog&lt;/h4&gt;

&lt;p&gt;这是一个&amp;quot;纯技术&amp;quot;的blog，原则上只会存在关于技术的文章。当然，这里所有的文章你都
可以转载，并不需要得到我本人的任何意见，但是我希望你能尊重我的知识，所以如果你
想转载，请你在你转载的页面上保留关于本blog的信息,具体如下:&lt;br&gt;
1. 94geek.com标识&lt;br&gt;
2. 原文章的链接地址  &lt;/p&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;

&lt;h4&gt;写在最后&lt;/h4&gt;

&lt;p&gt;这是我的第一篇blog，目的只有2个:&lt;br&gt;
1. 公示一下我最近要做什么，blog能帮助我做多少;&lt;br&gt;
2. 最重要也是紧急的事情就是：检查一下blog是否OK？&lt;/p&gt;
</content>
 </entry>
 
 
</feed>
